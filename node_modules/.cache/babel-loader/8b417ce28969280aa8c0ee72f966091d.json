{"ast":null,"code":"function t() {\n  return t = Object.assign ? Object.assign.bind() : function (t) {\n    for (var s = 1; s < arguments.length; s++) {\n      var e = arguments[s];\n\n      for (var n in e) {\n        Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);\n      }\n    }\n\n    return t;\n  }, t.apply(this, arguments);\n}\n\nvar s = {\n  strings: [\"These are the default values...\", \"You know what you should do?\", \"Use your own!\", \"Have a great day!\"],\n  stringsElement: null,\n  typeSpeed: 0,\n  startDelay: 0,\n  backSpeed: 0,\n  smartBackspace: !0,\n  shuffle: !1,\n  backDelay: 700,\n  fadeOut: !1,\n  fadeOutClass: \"typed-fade-out\",\n  fadeOutDelay: 500,\n  loop: !1,\n  loopCount: Infinity,\n  showCursor: !0,\n  cursorChar: \"|\",\n  autoInsertCss: !0,\n  attr: null,\n  bindInputFocusEvents: !1,\n  contentType: \"html\",\n  onBegin: function onBegin(t) {},\n  onComplete: function onComplete(t) {},\n  preStringTyped: function preStringTyped(t, s) {},\n  onStringTyped: function onStringTyped(t, s) {},\n  onLastStringBackspaced: function onLastStringBackspaced(t) {},\n  onTypingPaused: function onTypingPaused(t, s) {},\n  onTypingResumed: function onTypingResumed(t, s) {},\n  onReset: function onReset(t) {},\n  onStop: function onStop(t, s) {},\n  onStart: function onStart(t, s) {},\n  onDestroy: function onDestroy(t) {}\n},\n    e = new ( /*#__PURE__*/function () {\n  function e() {}\n\n  var n = e.prototype;\n  return n.load = function (e, n, i) {\n    if (e.el = \"string\" == typeof i ? document.querySelector(i) : i, e.options = t({}, s, n), e.isInput = \"input\" === e.el.tagName.toLowerCase(), e.attr = e.options.attr, e.bindInputFocusEvents = e.options.bindInputFocusEvents, e.showCursor = !e.isInput && e.options.showCursor, e.cursorChar = e.options.cursorChar, e.cursorBlinking = !0, e.elContent = e.attr ? e.el.getAttribute(e.attr) : e.el.textContent, e.contentType = e.options.contentType, e.typeSpeed = e.options.typeSpeed, e.startDelay = e.options.startDelay, e.backSpeed = e.options.backSpeed, e.smartBackspace = e.options.smartBackspace, e.backDelay = e.options.backDelay, e.fadeOut = e.options.fadeOut, e.fadeOutClass = e.options.fadeOutClass, e.fadeOutDelay = e.options.fadeOutDelay, e.isPaused = !1, e.strings = e.options.strings.map(function (t) {\n      return t.trim();\n    }), e.stringsElement = \"string\" == typeof e.options.stringsElement ? document.querySelector(e.options.stringsElement) : e.options.stringsElement, e.stringsElement) {\n      e.strings = [], e.stringsElement.style.cssText = \"clip: rect(0 0 0 0);clip-path:inset(50%);height:1px;overflow:hidden;position:absolute;white-space:nowrap;width:1px;\";\n      var r = Array.prototype.slice.apply(e.stringsElement.children),\n          o = r.length;\n      if (o) for (var a = 0; a < o; a += 1) {\n        e.strings.push(r[a].innerHTML.trim());\n      }\n    }\n\n    for (var u in e.strPos = 0, e.currentElContent = this.getCurrentElContent(e), e.currentElContent && e.currentElContent.length > 0 && (e.strPos = e.currentElContent.length - 1, e.strings.unshift(e.currentElContent)), e.sequence = [], e.strings) {\n      e.sequence[u] = u;\n    }\n\n    e.arrayPos = 0, e.stopNum = 0, e.loop = e.options.loop, e.loopCount = e.options.loopCount, e.curLoop = 0, e.shuffle = e.options.shuffle, e.pause = {\n      status: !1,\n      typewrite: !0,\n      curString: \"\",\n      curStrPos: 0\n    }, e.typingComplete = !1, e.autoInsertCss = e.options.autoInsertCss, e.autoInsertCss && (this.appendCursorAnimationCss(e), this.appendFadeOutAnimationCss(e));\n  }, n.getCurrentElContent = function (t) {\n    return t.attr ? t.el.getAttribute(t.attr) : t.isInput ? t.el.value : \"html\" === t.contentType ? t.el.innerHTML : t.el.textContent;\n  }, n.appendCursorAnimationCss = function (t) {\n    var s = \"data-typed-js-cursor-css\";\n\n    if (t.showCursor && !document.querySelector(\"[\" + s + \"]\")) {\n      var e = document.createElement(\"style\");\n      e.setAttribute(s, \"true\"), e.innerHTML = \"\\n        .typed-cursor{\\n          opacity: 1;\\n        }\\n        .typed-cursor.typed-cursor--blink{\\n          animation: typedjsBlink 0.7s infinite;\\n          -webkit-animation: typedjsBlink 0.7s infinite;\\n                  animation: typedjsBlink 0.7s infinite;\\n        }\\n        @keyframes typedjsBlink{\\n          50% { opacity: 0.0; }\\n        }\\n        @-webkit-keyframes typedjsBlink{\\n          0% { opacity: 1; }\\n          50% { opacity: 0.0; }\\n          100% { opacity: 1; }\\n        }\\n      \", document.body.appendChild(e);\n    }\n  }, n.appendFadeOutAnimationCss = function (t) {\n    var s = \"data-typed-fadeout-js-css\";\n\n    if (t.fadeOut && !document.querySelector(\"[\" + s + \"]\")) {\n      var e = document.createElement(\"style\");\n      e.setAttribute(s, \"true\"), e.innerHTML = \"\\n        .typed-fade-out{\\n          opacity: 0;\\n          transition: opacity .25s;\\n        }\\n        .typed-cursor.typed-cursor--blink.typed-fade-out{\\n          -webkit-animation: 0;\\n          animation: 0;\\n        }\\n      \", document.body.appendChild(e);\n    }\n  }, e;\n}())(),\n    n = new ( /*#__PURE__*/function () {\n  function t() {}\n\n  var s = t.prototype;\n  return s.typeHtmlChars = function (t, s, e) {\n    if (\"html\" !== e.contentType) return s;\n    var n = t.substring(s).charAt(0);\n\n    if (\"<\" === n || \"&\" === n) {\n      var i;\n\n      for (i = \"<\" === n ? \">\" : \";\"; t.substring(s + 1).charAt(0) !== i && !(1 + ++s > t.length);) {\n        ;\n      }\n\n      s++;\n    }\n\n    return s;\n  }, s.backSpaceHtmlChars = function (t, s, e) {\n    if (\"html\" !== e.contentType) return s;\n    var n = t.substring(s).charAt(0);\n\n    if (\">\" === n || \";\" === n) {\n      var i;\n\n      for (i = \">\" === n ? \"<\" : \"&\"; t.substring(s - 1).charAt(0) !== i && !(--s < 0);) {\n        ;\n      }\n\n      s--;\n    }\n\n    return s;\n  }, t;\n}())(),\n    i = /*#__PURE__*/function () {\n  function t(t, s) {\n    e.load(this, s, t), this.begin();\n  }\n\n  var s = t.prototype;\n  return s.toggle = function () {\n    this.pause.status ? this.start() : this.stop();\n  }, s.stop = function () {\n    this.typingComplete || this.pause.status || (this.toggleBlinking(!0), this.pause.status = !0, this.options.onStop(this.arrayPos, this));\n  }, s.start = function () {\n    this.typingComplete || this.pause.status && (this.pause.status = !1, this.pause.typewrite ? this.typewrite(this.pause.curString, this.pause.curStrPos) : this.backspace(this.pause.curString, this.pause.curStrPos), this.options.onStart(this.arrayPos, this));\n  }, s.destroy = function () {\n    this.reset(!1), this.options.onDestroy(this);\n  }, s.reset = function (t) {\n    void 0 === t && (t = !0), clearInterval(this.timeout), this.replaceText(\"\"), this.cursor && this.cursor.parentNode && (this.cursor.parentNode.removeChild(this.cursor), this.cursor = null), this.strPos = 0, this.arrayPos = 0, this.curLoop = 0, t && (this.insertCursor(), this.options.onReset(this), this.begin());\n  }, s.begin = function () {\n    var t = this;\n    this.options.onBegin(this), this.typingComplete = !1, this.shuffleStringsIfNeeded(this), this.insertCursor(), this.bindInputFocusEvents && this.bindFocusEvents(), this.timeout = setTimeout(function () {\n      0 === t.strPos ? t.typewrite(t.strings[t.sequence[t.arrayPos]], t.strPos) : t.backspace(t.strings[t.sequence[t.arrayPos]], t.strPos);\n    }, this.startDelay);\n  }, s.typewrite = function (t, s) {\n    var e = this;\n    this.fadeOut && this.el.classList.contains(this.fadeOutClass) && (this.el.classList.remove(this.fadeOutClass), this.cursor && this.cursor.classList.remove(this.fadeOutClass));\n    var i = this.humanizer(this.typeSpeed),\n        r = 1;\n    !0 !== this.pause.status ? this.timeout = setTimeout(function () {\n      s = n.typeHtmlChars(t, s, e);\n      var i = 0,\n          o = t.substring(s);\n\n      if (\"^\" === o.charAt(0) && /^\\^\\d+/.test(o)) {\n        var a = 1;\n        a += (o = /\\d+/.exec(o)[0]).length, i = parseInt(o), e.temporaryPause = !0, e.options.onTypingPaused(e.arrayPos, e), t = t.substring(0, s) + t.substring(s + a), e.toggleBlinking(!0);\n      }\n\n      if (\"`\" === o.charAt(0)) {\n        for (; \"`\" !== t.substring(s + r).charAt(0) && (r++, !(s + r > t.length));) {\n          ;\n        }\n\n        var u = t.substring(0, s),\n            p = t.substring(u.length + 1, s + r),\n            c = t.substring(s + r + 1);\n        t = u + p + c, r--;\n      }\n\n      e.timeout = setTimeout(function () {\n        e.toggleBlinking(!1), s >= t.length ? e.doneTyping(t, s) : e.keepTyping(t, s, r), e.temporaryPause && (e.temporaryPause = !1, e.options.onTypingResumed(e.arrayPos, e));\n      }, i);\n    }, i) : this.setPauseStatus(t, s, !0);\n  }, s.keepTyping = function (t, s, e) {\n    0 === s && (this.toggleBlinking(!1), this.options.preStringTyped(this.arrayPos, this));\n    var n = t.substring(0, s += e);\n    this.replaceText(n), this.typewrite(t, s);\n  }, s.doneTyping = function (t, s) {\n    var e = this;\n    this.options.onStringTyped(this.arrayPos, this), this.toggleBlinking(!0), this.arrayPos === this.strings.length - 1 && (this.complete(), !1 === this.loop || this.curLoop === this.loopCount) || (this.timeout = setTimeout(function () {\n      e.backspace(t, s);\n    }, this.backDelay));\n  }, s.backspace = function (t, s) {\n    var e = this;\n\n    if (!0 !== this.pause.status) {\n      if (this.fadeOut) return this.initFadeOut();\n      this.toggleBlinking(!1);\n      var i = this.humanizer(this.backSpeed);\n      this.timeout = setTimeout(function () {\n        s = n.backSpaceHtmlChars(t, s, e);\n        var i = t.substring(0, s);\n\n        if (e.replaceText(i), e.smartBackspace) {\n          var r = e.strings[e.arrayPos + 1];\n          e.stopNum = r && i === r.substring(0, s) ? s : 0;\n        }\n\n        s > e.stopNum ? (s--, e.backspace(t, s)) : s <= e.stopNum && (e.arrayPos++, e.arrayPos === e.strings.length ? (e.arrayPos = 0, e.options.onLastStringBackspaced(), e.shuffleStringsIfNeeded(), e.begin()) : e.typewrite(e.strings[e.sequence[e.arrayPos]], s));\n      }, i);\n    } else this.setPauseStatus(t, s, !1);\n  }, s.complete = function () {\n    this.options.onComplete(this), this.loop ? this.curLoop++ : this.typingComplete = !0;\n  }, s.setPauseStatus = function (t, s, e) {\n    this.pause.typewrite = e, this.pause.curString = t, this.pause.curStrPos = s;\n  }, s.toggleBlinking = function (t) {\n    this.cursor && (this.pause.status || this.cursorBlinking !== t && (this.cursorBlinking = t, t ? this.cursor.classList.add(\"typed-cursor--blink\") : this.cursor.classList.remove(\"typed-cursor--blink\")));\n  }, s.humanizer = function (t) {\n    return Math.round(Math.random() * t / 2) + t;\n  }, s.shuffleStringsIfNeeded = function () {\n    this.shuffle && (this.sequence = this.sequence.sort(function () {\n      return Math.random() - .5;\n    }));\n  }, s.initFadeOut = function () {\n    var t = this;\n    return this.el.className += \" \" + this.fadeOutClass, this.cursor && (this.cursor.className += \" \" + this.fadeOutClass), setTimeout(function () {\n      t.arrayPos++, t.replaceText(\"\"), t.strings.length > t.arrayPos ? t.typewrite(t.strings[t.sequence[t.arrayPos]], 0) : (t.typewrite(t.strings[0], 0), t.arrayPos = 0);\n    }, this.fadeOutDelay);\n  }, s.replaceText = function (t) {\n    this.attr ? this.el.setAttribute(this.attr, t) : this.isInput ? this.el.value = t : \"html\" === this.contentType ? this.el.innerHTML = t : this.el.textContent = t;\n  }, s.bindFocusEvents = function () {\n    var t = this;\n    this.isInput && (this.el.addEventListener(\"focus\", function (s) {\n      t.stop();\n    }), this.el.addEventListener(\"blur\", function (s) {\n      t.el.value && 0 !== t.el.value.length || t.start();\n    }));\n  }, s.insertCursor = function () {\n    this.showCursor && (this.cursor || (this.cursor = document.createElement(\"span\"), this.cursor.className = \"typed-cursor\", this.cursor.setAttribute(\"aria-hidden\", !0), this.cursor.innerHTML = this.cursorChar, this.el.parentNode && this.el.parentNode.insertBefore(this.cursor, this.el.nextSibling)));\n  }, t;\n}();\n\nexport { i as default };","map":{"version":3,"mappings":"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","names":["defaults","strings","stringsElement","typeSpeed","startDelay","backSpeed","smartBackspace","shuffle","backDelay","fadeOut","fadeOutClass","fadeOutDelay","loop","loopCount","Infinity","showCursor","cursorChar","autoInsertCss","attr","bindInputFocusEvents","contentType","onBegin","self","onComplete","preStringTyped","arrayPos","onStringTyped","onLastStringBackspaced","onTypingPaused","onTypingResumed","onReset","onStop","onStart","onDestroy","initializer","Initializer","_proto","load","options","elementId","el","document","querySelector","_extends","isInput","tagName","toLowerCase","cursorBlinking","elContent","getAttribute","textContent","isPaused","map","s","trim","style","cssText","Array","prototype","slice","apply","children","stringsLength","length","i","push","innerHTML","strPos","currentElContent","this","getCurrentElContent","unshift","sequence","stopNum","curLoop","pause","status","typewrite","curString","curStrPos","typingComplete","appendCursorAnimationCss","appendFadeOutAnimationCss","value","cssDataName","css","createElement","setAttribute","body","appendChild","htmlParser","HTMLParser","typeHtmlChars","curChar","substring","charAt","endTag","backSpaceHtmlChars","Typed","begin","toggle","start","stop","toggleBlinking","backspace","destroy","reset","restart","clearInterval","timeout","replaceText","cursor","parentNode","removeChild","insertCursor","_this","shuffleStringsIfNeeded","bindFocusEvents","setTimeout","classList","contains","remove","humanize","humanizer","numChars","_this2","pauseTime","substr","test","skip","exec","parseInt","temporaryPause","stringBeforeSkip","stringSkipped","stringAfterSkip","doneTyping","keepTyping","setPauseStatus","nextString","complete","_this3","initFadeOut","_this4","curStringAtPosition","isTyping","isBlinking","add","speed","Math","round","random","sort","className","_this5","str","_this6","addEventListener","e","insertBefore","nextSibling"],"sources":["/home/dheerajcl/Code-pulse/Codepulse/node_modules/typed.js/src/defaults.js","/home/dheerajcl/Code-pulse/Codepulse/node_modules/typed.js/src/initializer.js","/home/dheerajcl/Code-pulse/Codepulse/node_modules/typed.js/src/html-parser.js","/home/dheerajcl/Code-pulse/Codepulse/node_modules/typed.js/src/typed.js"],"sourcesContent":["/**\n * Defaults & options\n * @returns {object} Typed defaults & options\n * @public\n */\n\nconst defaults = {\n  /**\n   * @property {array} strings strings to be typed\n   * @property {string} stringsElement ID of element containing string children\n   */\n  strings: [\n    'These are the default values...',\n    'You know what you should do?',\n    'Use your own!',\n    'Have a great day!',\n  ],\n  stringsElement: null,\n\n  /**\n   * @property {number} typeSpeed type speed in milliseconds\n   */\n  typeSpeed: 0,\n\n  /**\n   * @property {number} startDelay time before typing starts in milliseconds\n   */\n  startDelay: 0,\n\n  /**\n   * @property {number} backSpeed backspacing speed in milliseconds\n   */\n  backSpeed: 0,\n\n  /**\n   * @property {boolean} smartBackspace only backspace what doesn't match the previous string\n   */\n  smartBackspace: true,\n\n  /**\n   * @property {boolean} shuffle shuffle the strings\n   */\n  shuffle: false,\n\n  /**\n   * @property {number} backDelay time before backspacing in milliseconds\n   */\n  backDelay: 700,\n\n  /**\n   * @property {boolean} fadeOut Fade out instead of backspace\n   * @property {string} fadeOutClass css class for fade animation\n   * @property {boolean} fadeOutDelay Fade out delay in milliseconds\n   */\n  fadeOut: false,\n  fadeOutClass: 'typed-fade-out',\n  fadeOutDelay: 500,\n\n  /**\n   * @property {boolean} loop loop strings\n   * @property {number} loopCount amount of loops\n   */\n  loop: false,\n  loopCount: Infinity,\n\n  /**\n   * @property {boolean} showCursor show cursor\n   * @property {string} cursorChar character for cursor\n   * @property {boolean} autoInsertCss insert CSS for cursor and fadeOut into HTML <head>\n   */\n  showCursor: true,\n  cursorChar: '|',\n  autoInsertCss: true,\n\n  /**\n   * @property {string} attr attribute for typing\n   * Ex: input placeholder, value, or just HTML text\n   */\n  attr: null,\n\n  /**\n   * @property {boolean} bindInputFocusEvents bind to focus and blur if el is text input\n   */\n  bindInputFocusEvents: false,\n\n  /**\n   * @property {string} contentType 'html' or 'null' for plaintext\n   */\n  contentType: 'html',\n\n  /**\n   * Before it begins typing\n   * @param {Typed} self\n   */\n  onBegin: (self) => {},\n\n  /**\n   * All typing is complete\n   * @param {Typed} self\n   */\n  onComplete: (self) => {},\n\n  /**\n   * Before each string is typed\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  preStringTyped: (arrayPos, self) => {},\n\n  /**\n   * After each string is typed\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onStringTyped: (arrayPos, self) => {},\n\n  /**\n   * During looping, after last string is typed\n   * @param {Typed} self\n   */\n  onLastStringBackspaced: (self) => {},\n\n  /**\n   * Typing has been stopped\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onTypingPaused: (arrayPos, self) => {},\n\n  /**\n   * Typing has been started after being stopped\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onTypingResumed: (arrayPos, self) => {},\n\n  /**\n   * After reset\n   * @param {Typed} self\n   */\n  onReset: (self) => {},\n\n  /**\n   * After stop\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onStop: (arrayPos, self) => {},\n\n  /**\n   * After start\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onStart: (arrayPos, self) => {},\n\n  /**\n   * After destroy\n   * @param {Typed} self\n   */\n  onDestroy: (self) => {},\n};\n\nexport default defaults;\n","import defaults from './defaults.js';\n/**\n * Initialize the Typed object\n */\n\nexport default class Initializer {\n  /**\n   * Load up defaults & options on the Typed instance\n   * @param {Typed} self instance of Typed\n   * @param {object} options options object\n   * @param {string} elementId HTML element ID _OR_ instance of HTML element\n   * @private\n   */\n\n  load(self, options, elementId) {\n    // chosen element to manipulate text\n    if (typeof elementId === 'string') {\n      self.el = document.querySelector(elementId);\n    } else {\n      self.el = elementId;\n    }\n\n    self.options = { ...defaults, ...options };\n\n    // attribute to type into\n    self.isInput = self.el.tagName.toLowerCase() === 'input';\n    self.attr = self.options.attr;\n    self.bindInputFocusEvents = self.options.bindInputFocusEvents;\n\n    // show cursor\n    self.showCursor = self.isInput ? false : self.options.showCursor;\n\n    // custom cursor\n    self.cursorChar = self.options.cursorChar;\n\n    // Is the cursor blinking\n    self.cursorBlinking = true;\n\n    // text content of element\n    self.elContent = self.attr\n      ? self.el.getAttribute(self.attr)\n      : self.el.textContent;\n\n    // html or plain text\n    self.contentType = self.options.contentType;\n\n    // typing speed\n    self.typeSpeed = self.options.typeSpeed;\n\n    // add a delay before typing starts\n    self.startDelay = self.options.startDelay;\n\n    // backspacing speed\n    self.backSpeed = self.options.backSpeed;\n\n    // only backspace what doesn't match the previous string\n    self.smartBackspace = self.options.smartBackspace;\n\n    // amount of time to wait before backspacing\n    self.backDelay = self.options.backDelay;\n\n    // Fade out instead of backspace\n    self.fadeOut = self.options.fadeOut;\n    self.fadeOutClass = self.options.fadeOutClass;\n    self.fadeOutDelay = self.options.fadeOutDelay;\n\n    // variable to check whether typing is currently paused\n    self.isPaused = false;\n\n    // input strings of text\n    self.strings = self.options.strings.map((s) => s.trim());\n\n    // div containing strings\n    if (typeof self.options.stringsElement === 'string') {\n      self.stringsElement = document.querySelector(self.options.stringsElement);\n    } else {\n      self.stringsElement = self.options.stringsElement;\n    }\n\n    if (self.stringsElement) {\n      self.strings = [];\n      self.stringsElement.style.cssText =\n        'clip: rect(0 0 0 0);clip-path:inset(50%);height:1px;overflow:hidden;position:absolute;white-space:nowrap;width:1px;';\n\n      const strings = Array.prototype.slice.apply(self.stringsElement.children);\n      const stringsLength = strings.length;\n\n      if (stringsLength) {\n        for (let i = 0; i < stringsLength; i += 1) {\n          const stringEl = strings[i];\n          self.strings.push(stringEl.innerHTML.trim());\n        }\n      }\n    }\n\n    // character number position of current string\n    self.strPos = 0;\n\n    // If there is some text in the element\n    self.currentElContent = this.getCurrentElContent(self);\n\n    if (self.currentElContent && self.currentElContent.length > 0) {\n      self.strPos = self.currentElContent.length - 1;\n      self.strings.unshift(self.currentElContent);\n    }\n\n    // the order of strings\n    self.sequence = [];\n\n    // Set the order in which the strings are typed\n    for (let i in self.strings) {\n      self.sequence[i] = i;\n    }\n\n    // current array position\n    self.arrayPos = 0;\n\n    // index of string to stop backspacing on\n    self.stopNum = 0;\n\n    // Looping logic\n    self.loop = self.options.loop;\n    self.loopCount = self.options.loopCount;\n    self.curLoop = 0;\n\n    // shuffle the strings\n    self.shuffle = self.options.shuffle;\n\n    self.pause = {\n      status: false,\n      typewrite: true,\n      curString: '',\n      curStrPos: 0,\n    };\n\n    // When the typing is complete (when not looped)\n    self.typingComplete = false;\n\n    self.autoInsertCss = self.options.autoInsertCss;\n\n    if (self.autoInsertCss) {\n      this.appendCursorAnimationCss(self);\n      this.appendFadeOutAnimationCss(self);\n    }\n  }\n\n  getCurrentElContent(self) {\n    let elContent = '';\n    if (self.attr) {\n      elContent = self.el.getAttribute(self.attr);\n    } else if (self.isInput) {\n      elContent = self.el.value;\n    } else if (self.contentType === 'html') {\n      elContent = self.el.innerHTML;\n    } else {\n      elContent = self.el.textContent;\n    }\n    return elContent;\n  }\n\n  appendCursorAnimationCss(self) {\n    const cssDataName = 'data-typed-js-cursor-css';\n\n    if (!self.showCursor || document.querySelector(`[${cssDataName}]`)) {\n      return;\n    }\n\n    let css = document.createElement('style');\n    css.setAttribute(cssDataName, 'true');\n\n    css.innerHTML = `\n        .typed-cursor{\n          opacity: 1;\n        }\n        .typed-cursor.typed-cursor--blink{\n          animation: typedjsBlink 0.7s infinite;\n          -webkit-animation: typedjsBlink 0.7s infinite;\n                  animation: typedjsBlink 0.7s infinite;\n        }\n        @keyframes typedjsBlink{\n          50% { opacity: 0.0; }\n        }\n        @-webkit-keyframes typedjsBlink{\n          0% { opacity: 1; }\n          50% { opacity: 0.0; }\n          100% { opacity: 1; }\n        }\n      `;\n\n    document.body.appendChild(css);\n  }\n\n  appendFadeOutAnimationCss(self) {\n    const cssDataName = 'data-typed-fadeout-js-css';\n\n    if (!self.fadeOut || document.querySelector(`[${cssDataName}]`)) {\n      return;\n    }\n\n    let css = document.createElement('style');\n    css.setAttribute(cssDataName, 'true');\n\n    css.innerHTML = `\n        .typed-fade-out{\n          opacity: 0;\n          transition: opacity .25s;\n        }\n        .typed-cursor.typed-cursor--blink.typed-fade-out{\n          -webkit-animation: 0;\n          animation: 0;\n        }\n      `;\n\n    document.body.appendChild(css);\n  }\n}\n\nexport let initializer = new Initializer();\n","/**\n * TODO: These methods can probably be combined somehow\n * Parse HTML tags & HTML Characters\n */\n\nexport default class HTMLParser {\n  /**\n   * Type HTML tags & HTML Characters\n   * @param {string} curString Current string\n   * @param {number} curStrPos Position in current string\n   * @param {Typed} self instance of Typed\n   * @returns {number} a new string position\n   * @private\n   */\n\n  typeHtmlChars(curString, curStrPos, self) {\n    if (self.contentType !== 'html') return curStrPos;\n    const curChar = curString.substring(curStrPos).charAt(0);\n    if (curChar === '<' || curChar === '&') {\n      let endTag = '';\n      if (curChar === '<') {\n        endTag = '>';\n      } else {\n        endTag = ';';\n      }\n      while (curString.substring(curStrPos + 1).charAt(0) !== endTag) {\n        curStrPos++;\n        if (curStrPos + 1 > curString.length) {\n          break;\n        }\n      }\n      curStrPos++;\n    }\n    return curStrPos;\n  }\n\n  /**\n   * Backspace HTML tags and HTML Characters\n   * @param {string} curString Current string\n   * @param {number} curStrPos Position in current string\n   * @param {Typed} self instance of Typed\n   * @returns {number} a new string position\n   * @private\n   */\n  backSpaceHtmlChars(curString, curStrPos, self) {\n    if (self.contentType !== 'html') return curStrPos;\n    const curChar = curString.substring(curStrPos).charAt(0);\n    if (curChar === '>' || curChar === ';') {\n      let endTag = '';\n      if (curChar === '>') {\n        endTag = '<';\n      } else {\n        endTag = '&';\n      }\n      while (curString.substring(curStrPos - 1).charAt(0) !== endTag) {\n        curStrPos--;\n        if (curStrPos < 0) {\n          break;\n        }\n      }\n      curStrPos--;\n    }\n    return curStrPos;\n  }\n}\n\nexport let htmlParser = new HTMLParser();\n","import { initializer } from './initializer.js';\nimport { htmlParser } from './html-parser.js';\n\n/**\n * Welcome to Typed.js!\n * @param {string} elementId HTML element ID _OR_ HTML element\n * @param {object} options options object\n * @returns {object} a new Typed object\n */\nexport default class Typed {\n  constructor(elementId, options) {\n    // Initialize it up\n    initializer.load(this, options, elementId);\n    // All systems go!\n    this.begin();\n  }\n\n  /**\n   * Toggle start() and stop() of the Typed instance\n   * @public\n   */\n  toggle() {\n    this.pause.status ? this.start() : this.stop();\n  }\n\n  /**\n   * Stop typing / backspacing and enable cursor blinking\n   * @public\n   */\n  stop() {\n    if (this.typingComplete) return;\n    if (this.pause.status) return;\n    this.toggleBlinking(true);\n    this.pause.status = true;\n    this.options.onStop(this.arrayPos, this);\n  }\n\n  /**\n   * Start typing / backspacing after being stopped\n   * @public\n   */\n  start() {\n    if (this.typingComplete) return;\n    if (!this.pause.status) return;\n    this.pause.status = false;\n    if (this.pause.typewrite) {\n      this.typewrite(this.pause.curString, this.pause.curStrPos);\n    } else {\n      this.backspace(this.pause.curString, this.pause.curStrPos);\n    }\n    this.options.onStart(this.arrayPos, this);\n  }\n\n  /**\n   * Destroy this instance of Typed\n   * @public\n   */\n  destroy() {\n    this.reset(false);\n    this.options.onDestroy(this);\n  }\n\n  /**\n   * Reset Typed and optionally restarts\n   * @param {boolean} restart\n   * @public\n   */\n  reset(restart = true) {\n    clearInterval(this.timeout);\n    this.replaceText('');\n    if (this.cursor && this.cursor.parentNode) {\n      this.cursor.parentNode.removeChild(this.cursor);\n      this.cursor = null;\n    }\n    this.strPos = 0;\n    this.arrayPos = 0;\n    this.curLoop = 0;\n    if (restart) {\n      this.insertCursor();\n      this.options.onReset(this);\n      this.begin();\n    }\n  }\n\n  /**\n   * Begins the typing animation\n   * @private\n   */\n  begin() {\n    this.options.onBegin(this);\n    this.typingComplete = false;\n    this.shuffleStringsIfNeeded(this);\n    this.insertCursor();\n    if (this.bindInputFocusEvents) this.bindFocusEvents();\n    this.timeout = setTimeout(() => {\n      // If the strPos is 0, we're starting from the beginning of a string\n      // else, we're starting with a previous string that needs to be backspaced first\n      if (this.strPos === 0) {\n        this.typewrite(this.strings[this.sequence[this.arrayPos]], this.strPos);\n      } else {\n        this.backspace(this.strings[this.sequence[this.arrayPos]], this.strPos);\n      }\n    }, this.startDelay);\n  }\n\n  /**\n   * Called for each character typed\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  typewrite(curString, curStrPos) {\n    if (this.fadeOut && this.el.classList.contains(this.fadeOutClass)) {\n      this.el.classList.remove(this.fadeOutClass);\n      if (this.cursor) this.cursor.classList.remove(this.fadeOutClass);\n    }\n\n    const humanize = this.humanizer(this.typeSpeed);\n    let numChars = 1;\n\n    if (this.pause.status === true) {\n      this.setPauseStatus(curString, curStrPos, true);\n      return;\n    }\n\n    // contain typing function in a timeout humanize'd delay\n    this.timeout = setTimeout(() => {\n      // skip over any HTML chars\n      curStrPos = htmlParser.typeHtmlChars(curString, curStrPos, this);\n\n      let pauseTime = 0;\n      let substr = curString.substring(curStrPos);\n      // check for an escape character before a pause value\n      // format: \\^\\d+ .. eg: ^1000 .. should be able to print the ^ too using ^^\n      // single ^ are removed from string\n      if (substr.charAt(0) === '^') {\n        if (/^\\^\\d+/.test(substr)) {\n          let skip = 1; // skip at least 1\n          substr = /\\d+/.exec(substr)[0];\n          skip += substr.length;\n          pauseTime = parseInt(substr);\n          this.temporaryPause = true;\n          this.options.onTypingPaused(this.arrayPos, this);\n          // strip out the escape character and pause value so they're not printed\n          curString =\n            curString.substring(0, curStrPos) +\n            curString.substring(curStrPos + skip);\n          this.toggleBlinking(true);\n        }\n      }\n\n      // check for skip characters formatted as\n      // \"this is a `string to print NOW` ...\"\n      if (substr.charAt(0) === '`') {\n        while (curString.substring(curStrPos + numChars).charAt(0) !== '`') {\n          numChars++;\n          if (curStrPos + numChars > curString.length) break;\n        }\n        // strip out the escape characters and append all the string in between\n        const stringBeforeSkip = curString.substring(0, curStrPos);\n        const stringSkipped = curString.substring(\n          stringBeforeSkip.length + 1,\n          curStrPos + numChars\n        );\n        const stringAfterSkip = curString.substring(curStrPos + numChars + 1);\n        curString = stringBeforeSkip + stringSkipped + stringAfterSkip;\n        numChars--;\n      }\n\n      // timeout for any pause after a character\n      this.timeout = setTimeout(() => {\n        // Accounts for blinking while paused\n        this.toggleBlinking(false);\n\n        // We're done with this sentence!\n        if (curStrPos >= curString.length) {\n          this.doneTyping(curString, curStrPos);\n        } else {\n          this.keepTyping(curString, curStrPos, numChars);\n        }\n        // end of character pause\n        if (this.temporaryPause) {\n          this.temporaryPause = false;\n          this.options.onTypingResumed(this.arrayPos, this);\n        }\n      }, pauseTime);\n\n      // humanized value for typing\n    }, humanize);\n  }\n\n  /**\n   * Continue to the next string & begin typing\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  keepTyping(curString, curStrPos, numChars) {\n    // call before functions if applicable\n    if (curStrPos === 0) {\n      this.toggleBlinking(false);\n      this.options.preStringTyped(this.arrayPos, this);\n    }\n    // start typing each new char into existing string\n    // curString: arg, this.el.html: original text inside element\n    curStrPos += numChars;\n    const nextString = curString.substring(0, curStrPos);\n    this.replaceText(nextString);\n    // loop the function\n    this.typewrite(curString, curStrPos);\n  }\n\n  /**\n   * We're done typing the current string\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  doneTyping(curString, curStrPos) {\n    // fires callback function\n    this.options.onStringTyped(this.arrayPos, this);\n    this.toggleBlinking(true);\n    // is this the final string\n    if (this.arrayPos === this.strings.length - 1) {\n      // callback that occurs on the last typed string\n      this.complete();\n      // quit if we wont loop back\n      if (this.loop === false || this.curLoop === this.loopCount) {\n        return;\n      }\n    }\n    this.timeout = setTimeout(() => {\n      this.backspace(curString, curStrPos);\n    }, this.backDelay);\n  }\n\n  /**\n   * Backspaces 1 character at a time\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  backspace(curString, curStrPos) {\n    if (this.pause.status === true) {\n      this.setPauseStatus(curString, curStrPos, false);\n      return;\n    }\n    if (this.fadeOut) return this.initFadeOut();\n\n    this.toggleBlinking(false);\n    const humanize = this.humanizer(this.backSpeed);\n\n    this.timeout = setTimeout(() => {\n      curStrPos = htmlParser.backSpaceHtmlChars(curString, curStrPos, this);\n      // replace text with base text + typed characters\n      const curStringAtPosition = curString.substring(0, curStrPos);\n      this.replaceText(curStringAtPosition);\n\n      // if smartBack is enabled\n      if (this.smartBackspace) {\n        // the remaining part of the current string is equal of the same part of the new string\n        let nextString = this.strings[this.arrayPos + 1];\n        if (\n          nextString &&\n          curStringAtPosition === nextString.substring(0, curStrPos)\n        ) {\n          this.stopNum = curStrPos;\n        } else {\n          this.stopNum = 0;\n        }\n      }\n\n      // if the number (id of character in current string) is\n      // less than the stop number, keep going\n      if (curStrPos > this.stopNum) {\n        // subtract characters one by one\n        curStrPos--;\n        // loop the function\n        this.backspace(curString, curStrPos);\n      } else if (curStrPos <= this.stopNum) {\n        // if the stop number has been reached, increase\n        // array position to next string\n        this.arrayPos++;\n        // When looping, begin at the beginning after backspace complete\n        if (this.arrayPos === this.strings.length) {\n          this.arrayPos = 0;\n          this.options.onLastStringBackspaced();\n          this.shuffleStringsIfNeeded();\n          this.begin();\n        } else {\n          this.typewrite(this.strings[this.sequence[this.arrayPos]], curStrPos);\n        }\n      }\n      // humanized value for typing\n    }, humanize);\n  }\n\n  /**\n   * Full animation is complete\n   * @private\n   */\n  complete() {\n    this.options.onComplete(this);\n    if (this.loop) {\n      this.curLoop++;\n    } else {\n      this.typingComplete = true;\n    }\n  }\n\n  /**\n   * Has the typing been stopped\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @param {boolean} isTyping\n   * @private\n   */\n  setPauseStatus(curString, curStrPos, isTyping) {\n    this.pause.typewrite = isTyping;\n    this.pause.curString = curString;\n    this.pause.curStrPos = curStrPos;\n  }\n\n  /**\n   * Toggle the blinking cursor\n   * @param {boolean} isBlinking\n   * @private\n   */\n  toggleBlinking(isBlinking) {\n    if (!this.cursor) return;\n    // if in paused state, don't toggle blinking a 2nd time\n    if (this.pause.status) return;\n    if (this.cursorBlinking === isBlinking) return;\n    this.cursorBlinking = isBlinking;\n    if (isBlinking) {\n      this.cursor.classList.add('typed-cursor--blink');\n    } else {\n      this.cursor.classList.remove('typed-cursor--blink');\n    }\n  }\n\n  /**\n   * Speed in MS to type\n   * @param {number} speed\n   * @private\n   */\n  humanizer(speed) {\n    return Math.round((Math.random() * speed) / 2) + speed;\n  }\n\n  /**\n   * Shuffle the sequence of the strings array\n   * @private\n   */\n  shuffleStringsIfNeeded() {\n    if (!this.shuffle) return;\n    this.sequence = this.sequence.sort(() => Math.random() - 0.5);\n  }\n\n  /**\n   * Adds a CSS class to fade out current string\n   * @private\n   */\n  initFadeOut() {\n    this.el.className += ` ${this.fadeOutClass}`;\n    if (this.cursor) this.cursor.className += ` ${this.fadeOutClass}`;\n    return setTimeout(() => {\n      this.arrayPos++;\n      this.replaceText('');\n\n      // Resets current string if end of loop reached\n      if (this.strings.length > this.arrayPos) {\n        this.typewrite(this.strings[this.sequence[this.arrayPos]], 0);\n      } else {\n        this.typewrite(this.strings[0], 0);\n        this.arrayPos = 0;\n      }\n    }, this.fadeOutDelay);\n  }\n\n  /**\n   * Replaces current text in the HTML element\n   * depending on element type\n   * @param {string} str\n   * @private\n   */\n  replaceText(str) {\n    if (this.attr) {\n      this.el.setAttribute(this.attr, str);\n    } else {\n      if (this.isInput) {\n        this.el.value = str;\n      } else if (this.contentType === 'html') {\n        this.el.innerHTML = str;\n      } else {\n        this.el.textContent = str;\n      }\n    }\n  }\n\n  /**\n   * If using input elements, bind focus in order to\n   * start and stop the animation\n   * @private\n   */\n  bindFocusEvents() {\n    if (!this.isInput) return;\n    this.el.addEventListener('focus', (e) => {\n      this.stop();\n    });\n    this.el.addEventListener('blur', (e) => {\n      if (this.el.value && this.el.value.length !== 0) {\n        return;\n      }\n      this.start();\n    });\n  }\n\n  /**\n   * On init, insert the cursor element\n   * @private\n   */\n  insertCursor() {\n    if (!this.showCursor) return;\n    if (this.cursor) return;\n    this.cursor = document.createElement('span');\n    this.cursor.className = 'typed-cursor';\n    this.cursor.setAttribute('aria-hidden', true);\n    this.cursor.innerHTML = this.cursorChar;\n    this.el.parentNode &&\n      this.el.parentNode.insertBefore(this.cursor, this.el.nextSibling);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}