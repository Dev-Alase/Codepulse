{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/home/dheerajcl/Code-pulse/Codepulse/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nvar _createForOfIteratorHelper = require(\"/home/dheerajcl/Code-pulse/Codepulse/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _classCallCheck = require(\"/home/dheerajcl/Code-pulse/Codepulse/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/dheerajcl/Code-pulse/Codepulse/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _inherits = require(\"/home/dheerajcl/Code-pulse/Codepulse/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"/home/dheerajcl/Code-pulse/Codepulse/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Namespace = exports.Socket = exports.Server = void 0;\n\nvar http = require(\"http\");\n\nvar fs_1 = require(\"fs\");\n\nvar zlib_1 = require(\"zlib\");\n\nvar accepts = require(\"accepts\");\n\nvar stream_1 = require(\"stream\");\n\nvar path = require(\"path\");\n\nvar engine_io_1 = require(\"engine.io\");\n\nvar client_1 = require(\"./client\");\n\nvar events_1 = require(\"events\");\n\nvar namespace_1 = require(\"./namespace\");\n\nObject.defineProperty(exports, \"Namespace\", {\n  enumerable: true,\n  get: function get() {\n    return namespace_1.Namespace;\n  }\n});\n\nvar parent_namespace_1 = require(\"./parent-namespace\");\n\nvar socket_io_adapter_1 = require(\"socket.io-adapter\");\n\nvar parser = __importStar(require(\"socket.io-parser\"));\n\nvar debug_1 = __importDefault(require(\"debug\"));\n\nvar socket_1 = require(\"./socket\");\n\nObject.defineProperty(exports, \"Socket\", {\n  enumerable: true,\n  get: function get() {\n    return socket_1.Socket;\n  }\n});\n\nvar typed_events_1 = require(\"./typed-events\");\n\nvar uws_1 = require(\"./uws\");\n\nvar cors_1 = __importDefault(require(\"cors\"));\n\nvar debug = (0, debug_1.default)(\"socket.io:server\");\n\nvar clientVersion = require(\"../package.json\").version;\n\nvar dotMapRegex = /\\.map/;\n/**\n * Represents a Socket.IO server.\n *\n * @example\n * import { Server } from \"socket.io\";\n *\n * const io = new Server();\n *\n * io.on(\"connection\", (socket) => {\n *   console.log(`socket ${socket.id} connected`);\n *\n *   // send an event to the client\n *   socket.emit(\"foo\", \"bar\");\n *\n *   socket.on(\"foobar\", () => {\n *     // an event was received from the client\n *   });\n *\n *   // upon disconnection\n *   socket.on(\"disconnect\", (reason) => {\n *     console.log(`socket ${socket.id} disconnected due to ${reason}`);\n *   });\n * });\n *\n * io.listen(3000);\n */\n\nvar Server = /*#__PURE__*/function (_typed_events_1$Stric) {\n  _inherits(Server, _typed_events_1$Stric);\n\n  var _super = _createSuper(Server);\n\n  function Server(srv) {\n    var _this;\n\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Server);\n\n    _this = _super.call(this);\n    /**\n     * @private\n     */\n\n    _this._nsps = new Map();\n    _this.parentNsps = new Map();\n    /**\n     * A subset of the {@link parentNsps} map, only containing {@link ParentNamespace} which are based on a regular\n     * expression.\n     *\n     * @private\n     */\n\n    _this.parentNamespacesFromRegExp = new Map();\n\n    if (\"object\" === typeof srv && srv instanceof Object && !srv.listen) {\n      opts = srv;\n      srv = undefined;\n    }\n\n    _this.path(opts.path || \"/socket.io\");\n\n    _this.connectTimeout(opts.connectTimeout || 45000);\n\n    _this.serveClient(false !== opts.serveClient);\n\n    _this._parser = opts.parser || parser;\n    _this.encoder = new _this._parser.Encoder();\n    _this.opts = opts;\n\n    if (opts.connectionStateRecovery) {\n      opts.connectionStateRecovery = Object.assign({\n        maxDisconnectionDuration: 2 * 60 * 1000,\n        skipMiddlewares: true\n      }, opts.connectionStateRecovery);\n\n      _this.adapter(opts.adapter || socket_io_adapter_1.SessionAwareAdapter);\n    } else {\n      _this.adapter(opts.adapter || socket_io_adapter_1.Adapter);\n    }\n\n    opts.cleanupEmptyChildNamespaces = !!opts.cleanupEmptyChildNamespaces;\n    _this.sockets = _this.of(\"/\");\n    if (srv || typeof srv == \"number\") _this.attach(srv);\n\n    if (_this.opts.cors) {\n      _this._corsMiddleware = (0, cors_1.default)(_this.opts.cors);\n    }\n\n    return _this;\n  }\n\n  _createClass(Server, [{\n    key: \"_opts\",\n    get: function get() {\n      return this.opts;\n    }\n  }, {\n    key: \"serveClient\",\n    value: function serveClient(v) {\n      if (!arguments.length) return this._serveClient;\n      this._serveClient = v;\n      return this;\n    }\n    /**\n     * Executes the middleware for an incoming namespace not already created on the server.\n     *\n     * @param name - name of incoming namespace\n     * @param auth - the auth parameters\n     * @param fn - callback\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_checkNamespace\",\n    value: function _checkNamespace(name, auth, fn) {\n      var _this2 = this;\n\n      if (this.parentNsps.size === 0) return fn(false);\n      var keysIterator = this.parentNsps.keys();\n\n      var run = function run() {\n        var nextFn = keysIterator.next();\n\n        if (nextFn.done) {\n          return fn(false);\n        }\n\n        nextFn.value(name, auth, function (err, allow) {\n          if (err || !allow) {\n            return run();\n          }\n\n          if (_this2._nsps.has(name)) {\n            // the namespace was created in the meantime\n            debug(\"dynamic namespace %s already exists\", name);\n            return fn(_this2._nsps.get(name));\n          }\n\n          var namespace = _this2.parentNsps.get(nextFn.value).createChild(name);\n\n          debug(\"dynamic namespace %s was created\", name);\n          fn(namespace);\n        });\n      };\n\n      run();\n    }\n  }, {\n    key: \"path\",\n    value: function path(v) {\n      if (!arguments.length) return this._path;\n      this._path = v.replace(/\\/$/, \"\");\n\n      var escapedPath = this._path.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n\n      this.clientPathRegex = new RegExp(\"^\" + escapedPath + \"/socket\\\\.io(\\\\.msgpack|\\\\.esm)?(\\\\.min)?\\\\.js(\\\\.map)?(?:\\\\?|$)\");\n      return this;\n    }\n  }, {\n    key: \"connectTimeout\",\n    value: function connectTimeout(v) {\n      if (v === undefined) return this._connectTimeout;\n      this._connectTimeout = v;\n      return this;\n    }\n  }, {\n    key: \"adapter\",\n    value: function adapter(v) {\n      if (!arguments.length) return this._adapter;\n      this._adapter = v;\n\n      var _iterator = _createForOfIteratorHelper(this._nsps.values()),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var nsp = _step.value;\n\n          nsp._initAdapter();\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return this;\n    }\n    /**\n     * Attaches socket.io to a server or port.\n     *\n     * @param srv - server or port\n     * @param opts - options passed to engine.io\n     * @return self\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(srv) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.attach(srv, opts);\n    }\n    /**\n     * Attaches socket.io to a server or port.\n     *\n     * @param srv - server or port\n     * @param opts - options passed to engine.io\n     * @return self\n     */\n\n  }, {\n    key: \"attach\",\n    value: function attach(srv) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (\"function\" == typeof srv) {\n        var msg = \"You are trying to attach socket.io to an express \" + \"request handler function. Please pass a http.Server instance.\";\n        throw new Error(msg);\n      } // handle a port as a string\n\n\n      if (Number(srv) == srv) {\n        srv = Number(srv);\n      }\n\n      if (\"number\" == typeof srv) {\n        debug(\"creating http server and binding to %d\", srv);\n        var port = srv;\n        srv = http.createServer(function (req, res) {\n          res.writeHead(404);\n          res.end();\n        });\n        srv.listen(port);\n      } // merge the options passed to the Socket.IO server\n\n\n      Object.assign(opts, this.opts); // set engine.io path to `/socket.io`\n\n      opts.path = opts.path || this._path;\n      this.initEngine(srv, opts);\n      return this;\n    }\n  }, {\n    key: \"attachApp\",\n    value: function attachApp(app\n    /*: TemplatedApp */\n    ) {\n      var _this3 = this;\n\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      // merge the options passed to the Socket.IO server\n      Object.assign(opts, this.opts); // set engine.io path to `/socket.io`\n\n      opts.path = opts.path || this._path; // initialize engine\n\n      debug(\"creating uWebSockets.js-based engine with opts %j\", opts);\n      var engine = new engine_io_1.uServer(opts);\n      engine.attach(app, opts); // bind to engine events\n\n      this.bind(engine);\n\n      if (this._serveClient) {\n        // attach static file serving\n        app.get(\"\".concat(this._path, \"/*\"), function (res, req) {\n          if (!_this3.clientPathRegex.test(req.getUrl())) {\n            req.setYield(true);\n            return;\n          }\n\n          var filename = req.getUrl().replace(_this3._path, \"\").replace(/\\?.*$/, \"\").replace(/^\\//, \"\");\n          var isMap = dotMapRegex.test(filename);\n          var type = isMap ? \"map\" : \"source\"; // Per the standard, ETags must be quoted:\n          // https://tools.ietf.org/html/rfc7232#section-2.3\n\n          var expectedEtag = '\"' + clientVersion + '\"';\n          var weakEtag = \"W/\" + expectedEtag;\n          var etag = req.getHeader(\"if-none-match\");\n\n          if (etag) {\n            if (expectedEtag === etag || weakEtag === etag) {\n              debug(\"serve client %s 304\", type);\n              res.writeStatus(\"304 Not Modified\");\n              res.end();\n              return;\n            }\n          }\n\n          debug(\"serve client %s\", type);\n          res.writeHeader(\"cache-control\", \"public, max-age=0\");\n          res.writeHeader(\"content-type\", \"application/\" + (isMap ? \"json\" : \"javascript\") + \"; charset=utf-8\");\n          res.writeHeader(\"etag\", expectedEtag);\n          var filepath = path.join(__dirname, \"../client-dist/\", filename);\n          (0, uws_1.serveFile)(res, filepath);\n        });\n      }\n\n      (0, uws_1.patchAdapter)(app);\n    }\n    /**\n     * Initialize engine\n     *\n     * @param srv - the server to attach to\n     * @param opts - options passed to engine.io\n     * @private\n     */\n\n  }, {\n    key: \"initEngine\",\n    value: function initEngine(srv, opts) {\n      // initialize engine\n      debug(\"creating engine.io instance with opts %j\", opts);\n      this.eio = (0, engine_io_1.attach)(srv, opts); // attach static file serving\n\n      if (this._serveClient) this.attachServe(srv); // Export http server\n\n      this.httpServer = srv; // bind to engine events\n\n      this.bind(this.eio);\n    }\n    /**\n     * Attaches the static file serving.\n     *\n     * @param srv http server\n     * @private\n     */\n\n  }, {\n    key: \"attachServe\",\n    value: function attachServe(srv) {\n      var _this4 = this;\n\n      debug(\"attaching client serving req handler\");\n      var evs = srv.listeners(\"request\").slice(0);\n      srv.removeAllListeners(\"request\");\n      srv.on(\"request\", function (req, res) {\n        if (_this4.clientPathRegex.test(req.url)) {\n          if (_this4._corsMiddleware) {\n            _this4._corsMiddleware(req, res, function () {\n              _this4.serve(req, res);\n            });\n          } else {\n            _this4.serve(req, res);\n          }\n        } else {\n          for (var i = 0; i < evs.length; i++) {\n            evs[i].call(srv, req, res);\n          }\n        }\n      });\n    }\n    /**\n     * Handles a request serving of client source and map\n     *\n     * @param req\n     * @param res\n     * @private\n     */\n\n  }, {\n    key: \"serve\",\n    value: function serve(req, res) {\n      var filename = req.url.replace(this._path, \"\").replace(/\\?.*$/, \"\");\n      var isMap = dotMapRegex.test(filename);\n      var type = isMap ? \"map\" : \"source\"; // Per the standard, ETags must be quoted:\n      // https://tools.ietf.org/html/rfc7232#section-2.3\n\n      var expectedEtag = '\"' + clientVersion + '\"';\n      var weakEtag = \"W/\" + expectedEtag;\n      var etag = req.headers[\"if-none-match\"];\n\n      if (etag) {\n        if (expectedEtag === etag || weakEtag === etag) {\n          debug(\"serve client %s 304\", type);\n          res.writeHead(304);\n          res.end();\n          return;\n        }\n      }\n\n      debug(\"serve client %s\", type);\n      res.setHeader(\"Cache-Control\", \"public, max-age=0\");\n      res.setHeader(\"Content-Type\", \"application/\" + (isMap ? \"json\" : \"javascript\") + \"; charset=utf-8\");\n      res.setHeader(\"ETag\", expectedEtag);\n      Server.sendFile(filename, req, res);\n    }\n    /**\n     * @param filename\n     * @param req\n     * @param res\n     * @private\n     */\n\n  }, {\n    key: \"bind\",\n    value:\n    /**\n     * Binds socket.io to an engine.io instance.\n     *\n     * @param engine engine.io (or compatible) server\n     * @return self\n     */\n    function bind(engine) {\n      this.engine = engine;\n      this.engine.on(\"connection\", this.onconnection.bind(this));\n      return this;\n    }\n    /**\n     * Called with each incoming transport connection.\n     *\n     * @param {engine.Socket} conn\n     * @return self\n     * @private\n     */\n\n  }, {\n    key: \"onconnection\",\n    value: function onconnection(conn) {\n      debug(\"incoming connection with id %s\", conn.id);\n      var client = new client_1.Client(this, conn);\n\n      if (conn.protocol === 3) {\n        // @ts-ignore\n        client.connect(\"/\");\n      }\n\n      return this;\n    }\n    /**\n     * Looks up a namespace.\n     *\n     * @example\n     * // with a simple string\n     * const myNamespace = io.of(\"/my-namespace\");\n     *\n     * // with a regex\n     * const dynamicNsp = io.of(/^\\/dynamic-\\d+$/).on(\"connection\", (socket) => {\n     *   const namespace = socket.nsp; // newNamespace.name === \"/dynamic-101\"\n     *\n     *   // broadcast to all clients in the given sub-namespace\n     *   namespace.emit(\"hello\");\n     * });\n     *\n     * @param name - nsp name\n     * @param fn optional, nsp `connection` ev handler\n     */\n\n  }, {\n    key: \"of\",\n    value: function of(name, fn) {\n      if (typeof name === \"function\" || name instanceof RegExp) {\n        var parentNsp = new parent_namespace_1.ParentNamespace(this);\n        debug(\"initializing parent namespace %s\", parentNsp.name);\n\n        if (typeof name === \"function\") {\n          this.parentNsps.set(name, parentNsp);\n        } else {\n          this.parentNsps.set(function (nsp, conn, next) {\n            return next(null, name.test(nsp));\n          }, parentNsp);\n          this.parentNamespacesFromRegExp.set(name, parentNsp);\n        }\n\n        if (fn) {\n          // @ts-ignore\n          parentNsp.on(\"connect\", fn);\n        }\n\n        return parentNsp;\n      }\n\n      if (String(name)[0] !== \"/\") name = \"/\" + name;\n\n      var nsp = this._nsps.get(name);\n\n      if (!nsp) {\n        var _iterator2 = _createForOfIteratorHelper(this.parentNamespacesFromRegExp),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _step2$value = _slicedToArray(_step2.value, 2),\n                regex = _step2$value[0],\n                parentNamespace = _step2$value[1];\n\n            if (regex.test(name)) {\n              debug(\"attaching namespace %s to parent namespace %s\", name, regex);\n              return parentNamespace.createChild(name);\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        debug(\"initializing namespace %s\", name);\n        nsp = new namespace_1.Namespace(this, name);\n\n        this._nsps.set(name, nsp);\n\n        if (name !== \"/\") {\n          // @ts-ignore\n          this.sockets.emitReserved(\"new_namespace\", nsp);\n        }\n      }\n\n      if (fn) nsp.on(\"connect\", fn);\n      return nsp;\n    }\n    /**\n     * Closes server connection\n     *\n     * @param [fn] optional, called as `fn([err])` on error OR all conns closed\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(fn) {\n      var _iterator3 = _createForOfIteratorHelper(this.sockets.sockets.values()),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var socket = _step3.value;\n\n          socket._onclose(\"server shutting down\");\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      this.engine.close(); // restore the Adapter prototype\n\n      (0, uws_1.restoreAdapter)();\n\n      if (this.httpServer) {\n        this.httpServer.close(fn);\n      } else {\n        fn && fn();\n      }\n    }\n    /**\n     * Registers a middleware, which is a function that gets executed for every incoming {@link Socket}.\n     *\n     * @example\n     * io.use((socket, next) => {\n     *   // ...\n     *   next();\n     * });\n     *\n     * @param fn - the middleware function\n     */\n\n  }, {\n    key: \"use\",\n    value: function use(fn) {\n      this.sockets.use(fn);\n      return this;\n    }\n    /**\n     * Targets a room when emitting.\n     *\n     * @example\n     * // the “foo” event will be broadcast to all connected clients in the “room-101” room\n     * io.to(\"room-101\").emit(\"foo\", \"bar\");\n     *\n     * // with an array of rooms (a client will be notified at most once)\n     * io.to([\"room-101\", \"room-102\"]).emit(\"foo\", \"bar\");\n     *\n     * // with multiple chained calls\n     * io.to(\"room-101\").to(\"room-102\").emit(\"foo\", \"bar\");\n     *\n     * @param room - a room, or an array of rooms\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n\n  }, {\n    key: \"to\",\n    value: function to(room) {\n      return this.sockets.to(room);\n    }\n    /**\n     * Targets a room when emitting. Similar to `to()`, but might feel clearer in some cases:\n     *\n     * @example\n     * // disconnect all clients in the \"room-101\" room\n     * io.in(\"room-101\").disconnectSockets();\n     *\n     * @param room - a room, or an array of rooms\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n\n  }, {\n    key: \"in\",\n    value: function _in(room) {\n      return this.sockets.in(room);\n    }\n    /**\n     * Excludes a room when emitting.\n     *\n     * @example\n     * // the \"foo\" event will be broadcast to all connected clients, except the ones that are in the \"room-101\" room\n     * io.except(\"room-101\").emit(\"foo\", \"bar\");\n     *\n     * // with an array of rooms\n     * io.except([\"room-101\", \"room-102\"]).emit(\"foo\", \"bar\");\n     *\n     * // with multiple chained calls\n     * io.except(\"room-101\").except(\"room-102\").emit(\"foo\", \"bar\");\n     *\n     * @param room - a room, or an array of rooms\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n\n  }, {\n    key: \"except\",\n    value: function except(room) {\n      return this.sockets.except(room);\n    }\n    /**\n     * Emits an event and waits for an acknowledgement from all clients.\n     *\n     * @example\n     * try {\n     *   const responses = await io.timeout(1000).emitWithAck(\"some-event\");\n     *   console.log(responses); // one response per client\n     * } catch (e) {\n     *   // some clients did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when all clients have acknowledged the event\n     */\n\n  }, {\n    key: \"emitWithAck\",\n    value: function emitWithAck(ev) {\n      var _this$sockets;\n\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return (_this$sockets = this.sockets).emitWithAck.apply(_this$sockets, [ev].concat(args));\n    }\n    /**\n     * Sends a `message` event to all clients.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * io.send(\"hello\");\n     *\n     * // this is equivalent to\n     * io.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n\n  }, {\n    key: \"send\",\n    value: function send() {\n      var _this$sockets2;\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      (_this$sockets2 = this.sockets).emit.apply(_this$sockets2, [\"message\"].concat(args));\n\n      return this;\n    }\n    /**\n     * Sends a `message` event to all clients. Alias of {@link send}.\n     *\n     * @return self\n     */\n\n  }, {\n    key: \"write\",\n    value: function write() {\n      var _this$sockets3;\n\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      (_this$sockets3 = this.sockets).emit.apply(_this$sockets3, [\"message\"].concat(args));\n\n      return this;\n    }\n    /**\n     * Sends a message to the other Socket.IO servers of the cluster.\n     *\n     * @example\n     * io.serverSideEmit(\"hello\", \"world\");\n     *\n     * io.on(\"hello\", (arg1) => {\n     *   console.log(arg1); // prints \"world\"\n     * });\n     *\n     * // acknowledgements (without binary content) are supported too:\n     * io.serverSideEmit(\"ping\", (err, responses) => {\n     *  if (err) {\n     *     // some servers did not acknowledge the event in the given delay\n     *   } else {\n     *     console.log(responses); // one response per server (except the current one)\n     *   }\n     * });\n     *\n     * io.on(\"ping\", (cb) => {\n     *   cb(\"pong\");\n     * });\n     *\n     * @param ev - the event name\n     * @param args - an array of arguments, which may include an acknowledgement callback at the end\n     */\n\n  }, {\n    key: \"serverSideEmit\",\n    value: function serverSideEmit(ev) {\n      var _this$sockets4;\n\n      for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n        args[_key4 - 1] = arguments[_key4];\n      }\n\n      return (_this$sockets4 = this.sockets).serverSideEmit.apply(_this$sockets4, [ev].concat(args));\n    }\n    /**\n     * Sends a message and expect an acknowledgement from the other Socket.IO servers of the cluster.\n     *\n     * @example\n     * try {\n     *   const responses = await io.serverSideEmitWithAck(\"ping\");\n     *   console.log(responses); // one response per server (except the current one)\n     * } catch (e) {\n     *   // some servers did not acknowledge the event in the given delay\n     * }\n     *\n     * @param ev - the event name\n     * @param args - an array of arguments\n     *\n     * @return a Promise that will be fulfilled when all servers have acknowledged the event\n     */\n\n  }, {\n    key: \"serverSideEmitWithAck\",\n    value: function serverSideEmitWithAck(ev) {\n      var _this$sockets5;\n\n      for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n        args[_key5 - 1] = arguments[_key5];\n      }\n\n      return (_this$sockets5 = this.sockets).serverSideEmitWithAck.apply(_this$sockets5, [ev].concat(args));\n    }\n    /**\n     * Gets a list of socket ids.\n     *\n     * @deprecated this method will be removed in the next major release, please use {@link Server#serverSideEmit} or\n     * {@link Server#fetchSockets} instead.\n     */\n\n  }, {\n    key: \"allSockets\",\n    value: function allSockets() {\n      return this.sockets.allSockets();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * io.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n\n  }, {\n    key: \"compress\",\n    value: function compress(_compress) {\n      return this.sockets.compress(_compress);\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event data may be lost if the client is not ready to\n     * receive messages (because of network slowness or other issues, or because they’re connected through long polling\n     * and is in the middle of a request-response cycle).\n     *\n     * @example\n     * io.volatile.emit(\"hello\"); // the clients may or may not receive it\n     *\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n\n  }, {\n    key: \"volatile\",\n    get: function get() {\n      return this.sockets.volatile;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event data will only be broadcast to the current node.\n     *\n     * @example\n     * // the “foo” event will be broadcast to all connected clients on this node\n     * io.local.emit(\"foo\", \"bar\");\n     *\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n\n  }, {\n    key: \"local\",\n    get: function get() {\n      return this.sockets.local;\n    }\n    /**\n     * Adds a timeout in milliseconds for the next operation.\n     *\n     * @example\n     * io.timeout(1000).emit(\"some-event\", (err, responses) => {\n     *   if (err) {\n     *     // some clients did not acknowledge the event in the given delay\n     *   } else {\n     *     console.log(responses); // one response per client\n     *   }\n     * });\n     *\n     * @param timeout\n     */\n\n  }, {\n    key: \"timeout\",\n    value: function timeout(_timeout) {\n      return this.sockets.timeout(_timeout);\n    }\n    /**\n     * Returns the matching socket instances.\n     *\n     * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n     *\n     * @example\n     * // return all Socket instances\n     * const sockets = await io.fetchSockets();\n     *\n     * // return all Socket instances in the \"room1\" room\n     * const sockets = await io.in(\"room1\").fetchSockets();\n     *\n     * for (const socket of sockets) {\n     *   console.log(socket.id);\n     *   console.log(socket.handshake);\n     *   console.log(socket.rooms);\n     *   console.log(socket.data);\n     *\n     *   socket.emit(\"hello\");\n     *   socket.join(\"room1\");\n     *   socket.leave(\"room2\");\n     *   socket.disconnect();\n     * }\n     */\n\n  }, {\n    key: \"fetchSockets\",\n    value: function fetchSockets() {\n      return this.sockets.fetchSockets();\n    }\n    /**\n     * Makes the matching socket instances join the specified rooms.\n     *\n     * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n     *\n     * @example\n     *\n     * // make all socket instances join the \"room1\" room\n     * io.socketsJoin(\"room1\");\n     *\n     * // make all socket instances in the \"room1\" room join the \"room2\" and \"room3\" rooms\n     * io.in(\"room1\").socketsJoin([\"room2\", \"room3\"]);\n     *\n     * @param room - a room, or an array of rooms\n     */\n\n  }, {\n    key: \"socketsJoin\",\n    value: function socketsJoin(room) {\n      return this.sockets.socketsJoin(room);\n    }\n    /**\n     * Makes the matching socket instances leave the specified rooms.\n     *\n     * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n     *\n     * @example\n     * // make all socket instances leave the \"room1\" room\n     * io.socketsLeave(\"room1\");\n     *\n     * // make all socket instances in the \"room1\" room leave the \"room2\" and \"room3\" rooms\n     * io.in(\"room1\").socketsLeave([\"room2\", \"room3\"]);\n     *\n     * @param room - a room, or an array of rooms\n     */\n\n  }, {\n    key: \"socketsLeave\",\n    value: function socketsLeave(room) {\n      return this.sockets.socketsLeave(room);\n    }\n    /**\n     * Makes the matching socket instances disconnect.\n     *\n     * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n     *\n     * @example\n     * // make all socket instances disconnect (the connections might be kept alive for other namespaces)\n     * io.disconnectSockets();\n     *\n     * // make all socket instances in the \"room1\" room disconnect and close the underlying connections\n     * io.in(\"room1\").disconnectSockets(true);\n     *\n     * @param close - whether to close the underlying connection\n     */\n\n  }, {\n    key: \"disconnectSockets\",\n    value: function disconnectSockets() {\n      var close = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      return this.sockets.disconnectSockets(close);\n    }\n  }], [{\n    key: \"sendFile\",\n    value: function sendFile(filename, req, res) {\n      var readStream = (0, fs_1.createReadStream)(path.join(__dirname, \"../client-dist/\", filename));\n      var encoding = accepts(req).encodings([\"br\", \"gzip\", \"deflate\"]);\n\n      var onError = function onError(err) {\n        if (err) {\n          res.end();\n        }\n      };\n\n      switch (encoding) {\n        case \"br\":\n          res.writeHead(200, {\n            \"content-encoding\": \"br\"\n          });\n          readStream.pipe((0, zlib_1.createBrotliCompress)()).pipe(res);\n          (0, stream_1.pipeline)(readStream, (0, zlib_1.createBrotliCompress)(), res, onError);\n          break;\n\n        case \"gzip\":\n          res.writeHead(200, {\n            \"content-encoding\": \"gzip\"\n          });\n          (0, stream_1.pipeline)(readStream, (0, zlib_1.createGzip)(), res, onError);\n          break;\n\n        case \"deflate\":\n          res.writeHead(200, {\n            \"content-encoding\": \"deflate\"\n          });\n          (0, stream_1.pipeline)(readStream, (0, zlib_1.createDeflate)(), res, onError);\n          break;\n\n        default:\n          res.writeHead(200);\n          (0, stream_1.pipeline)(readStream, res, onError);\n      }\n    }\n  }]);\n\n  return Server;\n}(typed_events_1.StrictEventEmitter);\n\nexports.Server = Server;\n/**\n * Expose main namespace (/).\n */\n\nvar emitterMethods = Object.keys(events_1.EventEmitter.prototype).filter(function (key) {\n  return typeof events_1.EventEmitter.prototype[key] === \"function\";\n});\nemitterMethods.forEach(function (fn) {\n  Server.prototype[fn] = function () {\n    return this.sockets[fn].apply(this.sockets, arguments);\n  };\n});\n\nmodule.exports = function (srv, opts) {\n  return new Server(srv, opts);\n};\n\nmodule.exports.Server = Server;\nmodule.exports.Namespace = namespace_1.Namespace;\nmodule.exports.Socket = socket_1.Socket;\n\nvar socket_2 = require(\"./socket\");","map":{"version":3,"sources":["/home/dheerajcl/Code-pulse/Codepulse/node_modules/socket.io/dist/index.js"],"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","__importDefault","exports","Namespace","Socket","Server","http","require","fs_1","zlib_1","accepts","stream_1","path","engine_io_1","client_1","events_1","namespace_1","parent_namespace_1","socket_io_adapter_1","parser","debug_1","socket_1","typed_events_1","uws_1","cors_1","debug","default","clientVersion","version","dotMapRegex","srv","opts","_nsps","Map","parentNsps","parentNamespacesFromRegExp","listen","connectTimeout","serveClient","_parser","encoder","Encoder","connectionStateRecovery","assign","maxDisconnectionDuration","skipMiddlewares","adapter","SessionAwareAdapter","Adapter","cleanupEmptyChildNamespaces","sockets","of","attach","cors","_corsMiddleware","arguments","length","_serveClient","name","auth","fn","size","keysIterator","keys","run","nextFn","next","done","err","allow","has","namespace","createChild","_path","replace","escapedPath","clientPathRegex","RegExp","_connectTimeout","_adapter","values","nsp","_initAdapter","msg","Error","Number","port","createServer","req","res","writeHead","end","initEngine","app","engine","uServer","bind","test","getUrl","setYield","filename","isMap","type","expectedEtag","weakEtag","etag","getHeader","writeStatus","writeHeader","filepath","join","__dirname","serveFile","patchAdapter","eio","attachServe","httpServer","evs","listeners","slice","removeAllListeners","on","url","serve","i","headers","setHeader","sendFile","onconnection","conn","id","client","Client","protocol","connect","parentNsp","ParentNamespace","set","String","regex","parentNamespace","emitReserved","socket","_onclose","close","restoreAdapter","use","room","to","in","except","ev","args","emitWithAck","emit","serverSideEmit","serverSideEmitWithAck","allSockets","compress","volatile","local","timeout","fetchSockets","socketsJoin","socketsLeave","disconnectSockets","readStream","createReadStream","encoding","encodings","onError","pipe","createBrotliCompress","pipeline","createGzip","createDeflate","StrictEventEmitter","emitterMethods","EventEmitter","filter","key","forEach","apply","module","socket_2"],"mappings":"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;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,aAAGA,IAAH,EAAS;AACL,aAAO,KAAKjG,OAAL,CAAamG,EAAb,CAAgBF,IAAhB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,gBAAOA,IAAP,EAAa;AACT,aAAO,KAAKjG,OAAL,CAAaoG,MAAb,CAAoBH,IAApB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,qBAAYI,EAAZ,EAAyB;AAAA;;AAAA,wCAANC,IAAM;AAANA,QAAAA,IAAM;AAAA;;AACrB,aAAO,sBAAKtG,OAAL,EAAauG,WAAb,uBAAyBF,EAAzB,SAAgCC,IAAhC,EAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,gBAAc;AAAA;;AAAA,yCAANA,IAAM;AAANA,QAAAA,IAAM;AAAA;;AACV,6BAAKtG,OAAL,EAAawG,IAAb,wBAAkB,SAAlB,SAAgCF,IAAhC;;AACA,aAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,iBAAe;AAAA;;AAAA,yCAANA,IAAM;AAANA,QAAAA,IAAM;AAAA;;AACX,6BAAKtG,OAAL,EAAawG,IAAb,wBAAkB,SAAlB,SAAgCF,IAAhC;;AACA,aAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,wBAAeD,EAAf,EAA4B;AAAA;;AAAA,yCAANC,IAAM;AAANA,QAAAA,IAAM;AAAA;;AACxB,aAAO,uBAAKtG,OAAL,EAAayG,cAAb,wBAA4BJ,EAA5B,SAAmCC,IAAnC,EAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,+BAAsBD,EAAtB,EAAmC;AAAA;;AAAA,yCAANC,IAAM;AAANA,QAAAA,IAAM;AAAA;;AAC/B,aAAO,uBAAKtG,OAAL,EAAa0G,qBAAb,wBAAmCL,EAAnC,SAA0CC,IAA1C,EAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,sBAAa;AACT,aAAO,KAAKtG,OAAL,CAAa2G,UAAb,EAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,kBAASC,SAAT,EAAmB;AACf,aAAO,KAAK5G,OAAL,CAAa4G,QAAb,CAAsBA,SAAtB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;SACI,eAAe;AACX,aAAO,KAAK5G,OAAL,CAAa6G,QAApB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;SACI,eAAY;AACR,aAAO,KAAK7G,OAAL,CAAa8G,KAApB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,iBAAQC,QAAR,EAAiB;AACb,aAAO,KAAK/G,OAAL,CAAa+G,OAAb,CAAqBA,QAArB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,wBAAe;AACX,aAAO,KAAK/G,OAAL,CAAagH,YAAb,EAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,qBAAYf,IAAZ,EAAkB;AACd,aAAO,KAAKjG,OAAL,CAAaiH,WAAb,CAAyBhB,IAAzB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,sBAAaA,IAAb,EAAmB;AACf,aAAO,K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","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Namespace = exports.Socket = exports.Server = void 0;\nconst http = require(\"http\");\nconst fs_1 = require(\"fs\");\nconst zlib_1 = require(\"zlib\");\nconst accepts = require(\"accepts\");\nconst stream_1 = require(\"stream\");\nconst path = require(\"path\");\nconst engine_io_1 = require(\"engine.io\");\nconst client_1 = require(\"./client\");\nconst events_1 = require(\"events\");\nconst namespace_1 = require(\"./namespace\");\nObject.defineProperty(exports, \"Namespace\", { enumerable: true, get: function () { return namespace_1.Namespace; } });\nconst parent_namespace_1 = require(\"./parent-namespace\");\nconst socket_io_adapter_1 = require(\"socket.io-adapter\");\nconst parser = __importStar(require(\"socket.io-parser\"));\nconst debug_1 = __importDefault(require(\"debug\"));\nconst socket_1 = require(\"./socket\");\nObject.defineProperty(exports, \"Socket\", { enumerable: true, get: function () { return socket_1.Socket; } });\nconst typed_events_1 = require(\"./typed-events\");\nconst uws_1 = require(\"./uws\");\nconst cors_1 = __importDefault(require(\"cors\"));\nconst debug = (0, debug_1.default)(\"socket.io:server\");\nconst clientVersion = require(\"../package.json\").version;\nconst dotMapRegex = /\\.map/;\n/**\n * Represents a Socket.IO server.\n *\n * @example\n * import { Server } from \"socket.io\";\n *\n * const io = new Server();\n *\n * io.on(\"connection\", (socket) => {\n *   console.log(`socket ${socket.id} connected`);\n *\n *   // send an event to the client\n *   socket.emit(\"foo\", \"bar\");\n *\n *   socket.on(\"foobar\", () => {\n *     // an event was received from the client\n *   });\n *\n *   // upon disconnection\n *   socket.on(\"disconnect\", (reason) => {\n *     console.log(`socket ${socket.id} disconnected due to ${reason}`);\n *   });\n * });\n *\n * io.listen(3000);\n */\nclass Server extends typed_events_1.StrictEventEmitter {\n    constructor(srv, opts = {}) {\n        super();\n        /**\n         * @private\n         */\n        this._nsps = new Map();\n        this.parentNsps = new Map();\n        /**\n         * A subset of the {@link parentNsps} map, only containing {@link ParentNamespace} which are based on a regular\n         * expression.\n         *\n         * @private\n         */\n        this.parentNamespacesFromRegExp = new Map();\n        if (\"object\" === typeof srv &&\n            srv instanceof Object &&\n            !srv.listen) {\n            opts = srv;\n            srv = undefined;\n        }\n        this.path(opts.path || \"/socket.io\");\n        this.connectTimeout(opts.connectTimeout || 45000);\n        this.serveClient(false !== opts.serveClient);\n        this._parser = opts.parser || parser;\n        this.encoder = new this._parser.Encoder();\n        this.opts = opts;\n        if (opts.connectionStateRecovery) {\n            opts.connectionStateRecovery = Object.assign({\n                maxDisconnectionDuration: 2 * 60 * 1000,\n                skipMiddlewares: true,\n            }, opts.connectionStateRecovery);\n            this.adapter(opts.adapter || socket_io_adapter_1.SessionAwareAdapter);\n        }\n        else {\n            this.adapter(opts.adapter || socket_io_adapter_1.Adapter);\n        }\n        opts.cleanupEmptyChildNamespaces = !!opts.cleanupEmptyChildNamespaces;\n        this.sockets = this.of(\"/\");\n        if (srv || typeof srv == \"number\")\n            this.attach(srv);\n        if (this.opts.cors) {\n            this._corsMiddleware = (0, cors_1.default)(this.opts.cors);\n        }\n    }\n    get _opts() {\n        return this.opts;\n    }\n    serveClient(v) {\n        if (!arguments.length)\n            return this._serveClient;\n        this._serveClient = v;\n        return this;\n    }\n    /**\n     * Executes the middleware for an incoming namespace not already created on the server.\n     *\n     * @param name - name of incoming namespace\n     * @param auth - the auth parameters\n     * @param fn - callback\n     *\n     * @private\n     */\n    _checkNamespace(name, auth, fn) {\n        if (this.parentNsps.size === 0)\n            return fn(false);\n        const keysIterator = this.parentNsps.keys();\n        const run = () => {\n            const nextFn = keysIterator.next();\n            if (nextFn.done) {\n                return fn(false);\n            }\n            nextFn.value(name, auth, (err, allow) => {\n                if (err || !allow) {\n                    return run();\n                }\n                if (this._nsps.has(name)) {\n                    // the namespace was created in the meantime\n                    debug(\"dynamic namespace %s already exists\", name);\n                    return fn(this._nsps.get(name));\n                }\n                const namespace = this.parentNsps.get(nextFn.value).createChild(name);\n                debug(\"dynamic namespace %s was created\", name);\n                fn(namespace);\n            });\n        };\n        run();\n    }\n    path(v) {\n        if (!arguments.length)\n            return this._path;\n        this._path = v.replace(/\\/$/, \"\");\n        const escapedPath = this._path.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n        this.clientPathRegex = new RegExp(\"^\" +\n            escapedPath +\n            \"/socket\\\\.io(\\\\.msgpack|\\\\.esm)?(\\\\.min)?\\\\.js(\\\\.map)?(?:\\\\?|$)\");\n        return this;\n    }\n    connectTimeout(v) {\n        if (v === undefined)\n            return this._connectTimeout;\n        this._connectTimeout = v;\n        return this;\n    }\n    adapter(v) {\n        if (!arguments.length)\n            return this._adapter;\n        this._adapter = v;\n        for (const nsp of this._nsps.values()) {\n            nsp._initAdapter();\n        }\n        return this;\n    }\n    /**\n     * Attaches socket.io to a server or port.\n     *\n     * @param srv - server or port\n     * @param opts - options passed to engine.io\n     * @return self\n     */\n    listen(srv, opts = {}) {\n        return this.attach(srv, opts);\n    }\n    /**\n     * Attaches socket.io to a server or port.\n     *\n     * @param srv - server or port\n     * @param opts - options passed to engine.io\n     * @return self\n     */\n    attach(srv, opts = {}) {\n        if (\"function\" == typeof srv) {\n            const msg = \"You are trying to attach socket.io to an express \" +\n                \"request handler function. Please pass a http.Server instance.\";\n            throw new Error(msg);\n        }\n        // handle a port as a string\n        if (Number(srv) == srv) {\n            srv = Number(srv);\n        }\n        if (\"number\" == typeof srv) {\n            debug(\"creating http server and binding to %d\", srv);\n            const port = srv;\n            srv = http.createServer((req, res) => {\n                res.writeHead(404);\n                res.end();\n            });\n            srv.listen(port);\n        }\n        // merge the options passed to the Socket.IO server\n        Object.assign(opts, this.opts);\n        // set engine.io path to `/socket.io`\n        opts.path = opts.path || this._path;\n        this.initEngine(srv, opts);\n        return this;\n    }\n    attachApp(app /*: TemplatedApp */, opts = {}) {\n        // merge the options passed to the Socket.IO server\n        Object.assign(opts, this.opts);\n        // set engine.io path to `/socket.io`\n        opts.path = opts.path || this._path;\n        // initialize engine\n        debug(\"creating uWebSockets.js-based engine with opts %j\", opts);\n        const engine = new engine_io_1.uServer(opts);\n        engine.attach(app, opts);\n        // bind to engine events\n        this.bind(engine);\n        if (this._serveClient) {\n            // attach static file serving\n            app.get(`${this._path}/*`, (res, req) => {\n                if (!this.clientPathRegex.test(req.getUrl())) {\n                    req.setYield(true);\n                    return;\n                }\n                const filename = req\n                    .getUrl()\n                    .replace(this._path, \"\")\n                    .replace(/\\?.*$/, \"\")\n                    .replace(/^\\//, \"\");\n                const isMap = dotMapRegex.test(filename);\n                const type = isMap ? \"map\" : \"source\";\n                // Per the standard, ETags must be quoted:\n                // https://tools.ietf.org/html/rfc7232#section-2.3\n                const expectedEtag = '\"' + clientVersion + '\"';\n                const weakEtag = \"W/\" + expectedEtag;\n                const etag = req.getHeader(\"if-none-match\");\n                if (etag) {\n                    if (expectedEtag === etag || weakEtag === etag) {\n                        debug(\"serve client %s 304\", type);\n                        res.writeStatus(\"304 Not Modified\");\n                        res.end();\n                        return;\n                    }\n                }\n                debug(\"serve client %s\", type);\n                res.writeHeader(\"cache-control\", \"public, max-age=0\");\n                res.writeHeader(\"content-type\", \"application/\" + (isMap ? \"json\" : \"javascript\") + \"; charset=utf-8\");\n                res.writeHeader(\"etag\", expectedEtag);\n                const filepath = path.join(__dirname, \"../client-dist/\", filename);\n                (0, uws_1.serveFile)(res, filepath);\n            });\n        }\n        (0, uws_1.patchAdapter)(app);\n    }\n    /**\n     * Initialize engine\n     *\n     * @param srv - the server to attach to\n     * @param opts - options passed to engine.io\n     * @private\n     */\n    initEngine(srv, opts) {\n        // initialize engine\n        debug(\"creating engine.io instance with opts %j\", opts);\n        this.eio = (0, engine_io_1.attach)(srv, opts);\n        // attach static file serving\n        if (this._serveClient)\n            this.attachServe(srv);\n        // Export http server\n        this.httpServer = srv;\n        // bind to engine events\n        this.bind(this.eio);\n    }\n    /**\n     * Attaches the static file serving.\n     *\n     * @param srv http server\n     * @private\n     */\n    attachServe(srv) {\n        debug(\"attaching client serving req handler\");\n        const evs = srv.listeners(\"request\").slice(0);\n        srv.removeAllListeners(\"request\");\n        srv.on(\"request\", (req, res) => {\n            if (this.clientPathRegex.test(req.url)) {\n                if (this._corsMiddleware) {\n                    this._corsMiddleware(req, res, () => {\n                        this.serve(req, res);\n                    });\n                }\n                else {\n                    this.serve(req, res);\n                }\n            }\n            else {\n                for (let i = 0; i < evs.length; i++) {\n                    evs[i].call(srv, req, res);\n                }\n            }\n        });\n    }\n    /**\n     * Handles a request serving of client source and map\n     *\n     * @param req\n     * @param res\n     * @private\n     */\n    serve(req, res) {\n        const filename = req.url.replace(this._path, \"\").replace(/\\?.*$/, \"\");\n        const isMap = dotMapRegex.test(filename);\n        const type = isMap ? \"map\" : \"source\";\n        // Per the standard, ETags must be quoted:\n        // https://tools.ietf.org/html/rfc7232#section-2.3\n        const expectedEtag = '\"' + clientVersion + '\"';\n        const weakEtag = \"W/\" + expectedEtag;\n        const etag = req.headers[\"if-none-match\"];\n        if (etag) {\n            if (expectedEtag === etag || weakEtag === etag) {\n                debug(\"serve client %s 304\", type);\n                res.writeHead(304);\n                res.end();\n                return;\n            }\n        }\n        debug(\"serve client %s\", type);\n        res.setHeader(\"Cache-Control\", \"public, max-age=0\");\n        res.setHeader(\"Content-Type\", \"application/\" + (isMap ? \"json\" : \"javascript\") + \"; charset=utf-8\");\n        res.setHeader(\"ETag\", expectedEtag);\n        Server.sendFile(filename, req, res);\n    }\n    /**\n     * @param filename\n     * @param req\n     * @param res\n     * @private\n     */\n    static sendFile(filename, req, res) {\n        const readStream = (0, fs_1.createReadStream)(path.join(__dirname, \"../client-dist/\", filename));\n        const encoding = accepts(req).encodings([\"br\", \"gzip\", \"deflate\"]);\n        const onError = (err) => {\n            if (err) {\n                res.end();\n            }\n        };\n        switch (encoding) {\n            case \"br\":\n                res.writeHead(200, { \"content-encoding\": \"br\" });\n                readStream.pipe((0, zlib_1.createBrotliCompress)()).pipe(res);\n                (0, stream_1.pipeline)(readStream, (0, zlib_1.createBrotliCompress)(), res, onError);\n                break;\n            case \"gzip\":\n                res.writeHead(200, { \"content-encoding\": \"gzip\" });\n                (0, stream_1.pipeline)(readStream, (0, zlib_1.createGzip)(), res, onError);\n                break;\n            case \"deflate\":\n                res.writeHead(200, { \"content-encoding\": \"deflate\" });\n                (0, stream_1.pipeline)(readStream, (0, zlib_1.createDeflate)(), res, onError);\n                break;\n            default:\n                res.writeHead(200);\n                (0, stream_1.pipeline)(readStream, res, onError);\n        }\n    }\n    /**\n     * Binds socket.io to an engine.io instance.\n     *\n     * @param engine engine.io (or compatible) server\n     * @return self\n     */\n    bind(engine) {\n        this.engine = engine;\n        this.engine.on(\"connection\", this.onconnection.bind(this));\n        return this;\n    }\n    /**\n     * Called with each incoming transport connection.\n     *\n     * @param {engine.Socket} conn\n     * @return self\n     * @private\n     */\n    onconnection(conn) {\n        debug(\"incoming connection with id %s\", conn.id);\n        const client = new client_1.Client(this, conn);\n        if (conn.protocol === 3) {\n            // @ts-ignore\n            client.connect(\"/\");\n        }\n        return this;\n    }\n    /**\n     * Looks up a namespace.\n     *\n     * @example\n     * // with a simple string\n     * const myNamespace = io.of(\"/my-namespace\");\n     *\n     * // with a regex\n     * const dynamicNsp = io.of(/^\\/dynamic-\\d+$/).on(\"connection\", (socket) => {\n     *   const namespace = socket.nsp; // newNamespace.name === \"/dynamic-101\"\n     *\n     *   // broadcast to all clients in the given sub-namespace\n     *   namespace.emit(\"hello\");\n     * });\n     *\n     * @param name - nsp name\n     * @param fn optional, nsp `connection` ev handler\n     */\n    of(name, fn) {\n        if (typeof name === \"function\" || name instanceof RegExp) {\n            const parentNsp = new parent_namespace_1.ParentNamespace(this);\n            debug(\"initializing parent namespace %s\", parentNsp.name);\n            if (typeof name === \"function\") {\n                this.parentNsps.set(name, parentNsp);\n            }\n            else {\n                this.parentNsps.set((nsp, conn, next) => next(null, name.test(nsp)), parentNsp);\n                this.parentNamespacesFromRegExp.set(name, parentNsp);\n            }\n            if (fn) {\n                // @ts-ignore\n                parentNsp.on(\"connect\", fn);\n            }\n            return parentNsp;\n        }\n        if (String(name)[0] !== \"/\")\n            name = \"/\" + name;\n        let nsp = this._nsps.get(name);\n        if (!nsp) {\n            for (const [regex, parentNamespace] of this.parentNamespacesFromRegExp) {\n                if (regex.test(name)) {\n                    debug(\"attaching namespace %s to parent namespace %s\", name, regex);\n                    return parentNamespace.createChild(name);\n                }\n            }\n            debug(\"initializing namespace %s\", name);\n            nsp = new namespace_1.Namespace(this, name);\n            this._nsps.set(name, nsp);\n            if (name !== \"/\") {\n                // @ts-ignore\n                this.sockets.emitReserved(\"new_namespace\", nsp);\n            }\n        }\n        if (fn)\n            nsp.on(\"connect\", fn);\n        return nsp;\n    }\n    /**\n     * Closes server connection\n     *\n     * @param [fn] optional, called as `fn([err])` on error OR all conns closed\n     */\n    close(fn) {\n        for (const socket of this.sockets.sockets.values()) {\n            socket._onclose(\"server shutting down\");\n        }\n        this.engine.close();\n        // restore the Adapter prototype\n        (0, uws_1.restoreAdapter)();\n        if (this.httpServer) {\n            this.httpServer.close(fn);\n        }\n        else {\n            fn && fn();\n        }\n    }\n    /**\n     * Registers a middleware, which is a function that gets executed for every incoming {@link Socket}.\n     *\n     * @example\n     * io.use((socket, next) => {\n     *   // ...\n     *   next();\n     * });\n     *\n     * @param fn - the middleware function\n     */\n    use(fn) {\n        this.sockets.use(fn);\n        return this;\n    }\n    /**\n     * Targets a room when emitting.\n     *\n     * @example\n     * // the “foo” event will be broadcast to all connected clients in the “room-101” room\n     * io.to(\"room-101\").emit(\"foo\", \"bar\");\n     *\n     * // with an array of rooms (a client will be notified at most once)\n     * io.to([\"room-101\", \"room-102\"]).emit(\"foo\", \"bar\");\n     *\n     * // with multiple chained calls\n     * io.to(\"room-101\").to(\"room-102\").emit(\"foo\", \"bar\");\n     *\n     * @param room - a room, or an array of rooms\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    to(room) {\n        return this.sockets.to(room);\n    }\n    /**\n     * Targets a room when emitting. Similar to `to()`, but might feel clearer in some cases:\n     *\n     * @example\n     * // disconnect all clients in the \"room-101\" room\n     * io.in(\"room-101\").disconnectSockets();\n     *\n     * @param room - a room, or an array of rooms\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    in(room) {\n        return this.sockets.in(room);\n    }\n    /**\n     * Excludes a room when emitting.\n     *\n     * @example\n     * // the \"foo\" event will be broadcast to all connected clients, except the ones that are in the \"room-101\" room\n     * io.except(\"room-101\").emit(\"foo\", \"bar\");\n     *\n     * // with an array of rooms\n     * io.except([\"room-101\", \"room-102\"]).emit(\"foo\", \"bar\");\n     *\n     * // with multiple chained calls\n     * io.except(\"room-101\").except(\"room-102\").emit(\"foo\", \"bar\");\n     *\n     * @param room - a room, or an array of rooms\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    except(room) {\n        return this.sockets.except(room);\n    }\n    /**\n     * Emits an event and waits for an acknowledgement from all clients.\n     *\n     * @example\n     * try {\n     *   const responses = await io.timeout(1000).emitWithAck(\"some-event\");\n     *   console.log(responses); // one response per client\n     * } catch (e) {\n     *   // some clients did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when all clients have acknowledged the event\n     */\n    emitWithAck(ev, ...args) {\n        return this.sockets.emitWithAck(ev, ...args);\n    }\n    /**\n     * Sends a `message` event to all clients.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * io.send(\"hello\");\n     *\n     * // this is equivalent to\n     * io.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        this.sockets.emit(\"message\", ...args);\n        return this;\n    }\n    /**\n     * Sends a `message` event to all clients. Alias of {@link send}.\n     *\n     * @return self\n     */\n    write(...args) {\n        this.sockets.emit(\"message\", ...args);\n        return this;\n    }\n    /**\n     * Sends a message to the other Socket.IO servers of the cluster.\n     *\n     * @example\n     * io.serverSideEmit(\"hello\", \"world\");\n     *\n     * io.on(\"hello\", (arg1) => {\n     *   console.log(arg1); // prints \"world\"\n     * });\n     *\n     * // acknowledgements (without binary content) are supported too:\n     * io.serverSideEmit(\"ping\", (err, responses) => {\n     *  if (err) {\n     *     // some servers did not acknowledge the event in the given delay\n     *   } else {\n     *     console.log(responses); // one response per server (except the current one)\n     *   }\n     * });\n     *\n     * io.on(\"ping\", (cb) => {\n     *   cb(\"pong\");\n     * });\n     *\n     * @param ev - the event name\n     * @param args - an array of arguments, which may include an acknowledgement callback at the end\n     */\n    serverSideEmit(ev, ...args) {\n        return this.sockets.serverSideEmit(ev, ...args);\n    }\n    /**\n     * Sends a message and expect an acknowledgement from the other Socket.IO servers of the cluster.\n     *\n     * @example\n     * try {\n     *   const responses = await io.serverSideEmitWithAck(\"ping\");\n     *   console.log(responses); // one response per server (except the current one)\n     * } catch (e) {\n     *   // some servers did not acknowledge the event in the given delay\n     * }\n     *\n     * @param ev - the event name\n     * @param args - an array of arguments\n     *\n     * @return a Promise that will be fulfilled when all servers have acknowledged the event\n     */\n    serverSideEmitWithAck(ev, ...args) {\n        return this.sockets.serverSideEmitWithAck(ev, ...args);\n    }\n    /**\n     * Gets a list of socket ids.\n     *\n     * @deprecated this method will be removed in the next major release, please use {@link Server#serverSideEmit} or\n     * {@link Server#fetchSockets} instead.\n     */\n    allSockets() {\n        return this.sockets.allSockets();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * io.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    compress(compress) {\n        return this.sockets.compress(compress);\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event data may be lost if the client is not ready to\n     * receive messages (because of network slowness or other issues, or because they’re connected through long polling\n     * and is in the middle of a request-response cycle).\n     *\n     * @example\n     * io.volatile.emit(\"hello\"); // the clients may or may not receive it\n     *\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    get volatile() {\n        return this.sockets.volatile;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event data will only be broadcast to the current node.\n     *\n     * @example\n     * // the “foo” event will be broadcast to all connected clients on this node\n     * io.local.emit(\"foo\", \"bar\");\n     *\n     * @return a new {@link BroadcastOperator} instance for chaining\n     */\n    get local() {\n        return this.sockets.local;\n    }\n    /**\n     * Adds a timeout in milliseconds for the next operation.\n     *\n     * @example\n     * io.timeout(1000).emit(\"some-event\", (err, responses) => {\n     *   if (err) {\n     *     // some clients did not acknowledge the event in the given delay\n     *   } else {\n     *     console.log(responses); // one response per client\n     *   }\n     * });\n     *\n     * @param timeout\n     */\n    timeout(timeout) {\n        return this.sockets.timeout(timeout);\n    }\n    /**\n     * Returns the matching socket instances.\n     *\n     * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n     *\n     * @example\n     * // return all Socket instances\n     * const sockets = await io.fetchSockets();\n     *\n     * // return all Socket instances in the \"room1\" room\n     * const sockets = await io.in(\"room1\").fetchSockets();\n     *\n     * for (const socket of sockets) {\n     *   console.log(socket.id);\n     *   console.log(socket.handshake);\n     *   console.log(socket.rooms);\n     *   console.log(socket.data);\n     *\n     *   socket.emit(\"hello\");\n     *   socket.join(\"room1\");\n     *   socket.leave(\"room2\");\n     *   socket.disconnect();\n     * }\n     */\n    fetchSockets() {\n        return this.sockets.fetchSockets();\n    }\n    /**\n     * Makes the matching socket instances join the specified rooms.\n     *\n     * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n     *\n     * @example\n     *\n     * // make all socket instances join the \"room1\" room\n     * io.socketsJoin(\"room1\");\n     *\n     * // make all socket instances in the \"room1\" room join the \"room2\" and \"room3\" rooms\n     * io.in(\"room1\").socketsJoin([\"room2\", \"room3\"]);\n     *\n     * @param room - a room, or an array of rooms\n     */\n    socketsJoin(room) {\n        return this.sockets.socketsJoin(room);\n    }\n    /**\n     * Makes the matching socket instances leave the specified rooms.\n     *\n     * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n     *\n     * @example\n     * // make all socket instances leave the \"room1\" room\n     * io.socketsLeave(\"room1\");\n     *\n     * // make all socket instances in the \"room1\" room leave the \"room2\" and \"room3\" rooms\n     * io.in(\"room1\").socketsLeave([\"room2\", \"room3\"]);\n     *\n     * @param room - a room, or an array of rooms\n     */\n    socketsLeave(room) {\n        return this.sockets.socketsLeave(room);\n    }\n    /**\n     * Makes the matching socket instances disconnect.\n     *\n     * Note: this method also works within a cluster of multiple Socket.IO servers, with a compatible {@link Adapter}.\n     *\n     * @example\n     * // make all socket instances disconnect (the connections might be kept alive for other namespaces)\n     * io.disconnectSockets();\n     *\n     * // make all socket instances in the \"room1\" room disconnect and close the underlying connections\n     * io.in(\"room1\").disconnectSockets(true);\n     *\n     * @param close - whether to close the underlying connection\n     */\n    disconnectSockets(close = false) {\n        return this.sockets.disconnectSockets(close);\n    }\n}\nexports.Server = Server;\n/**\n * Expose main namespace (/).\n */\nconst emitterMethods = Object.keys(events_1.EventEmitter.prototype).filter(function (key) {\n    return typeof events_1.EventEmitter.prototype[key] === \"function\";\n});\nemitterMethods.forEach(function (fn) {\n    Server.prototype[fn] = function () {\n        return this.sockets[fn].apply(this.sockets, arguments);\n    };\n});\nmodule.exports = (srv, opts) => new Server(srv, opts);\nmodule.exports.Server = Server;\nmodule.exports.Namespace = namespace_1.Namespace;\nmodule.exports.Socket = socket_1.Socket;\nvar socket_2 = require(\"./socket\");\n"]},"metadata":{},"sourceType":"script"}