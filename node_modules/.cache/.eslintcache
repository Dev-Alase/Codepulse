[{"/home/dheerajcl/Code-pulse/Codepulse/src/index.js":"1","/home/dheerajcl/Code-pulse/Codepulse/src/reportWebVitals.js":"2","/home/dheerajcl/Code-pulse/Codepulse/src/App.js":"3","/home/dheerajcl/Code-pulse/Codepulse/src/pages/Home.js":"4","/home/dheerajcl/Code-pulse/Codepulse/src/pages/EditorPage.js":"5","/home/dheerajcl/Code-pulse/Codepulse/src/Actions.js":"6","/home/dheerajcl/Code-pulse/Codepulse/src/socket.js":"7","/home/dheerajcl/Code-pulse/Codepulse/src/Particleeffect.js":"8","/home/dheerajcl/Code-pulse/Codepulse/src/components/Editor.js":"9","/home/dheerajcl/Code-pulse/Codepulse/src/components/Client.js":"10","/home/dheerajcl/Code-pulse/Codepulse/src/pages/LandingPage.js":"11"},{"size":499,"mtime":1698147617831,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1698147617831,"results":"14","hashOfConfig":"13"},{"size":863,"mtime":1698335642507,"results":"15","hashOfConfig":"13"},{"size":2548,"mtime":1698409171246,"results":"16","hashOfConfig":"13"},{"size":3573,"mtime":1698410813041,"results":"17","hashOfConfig":"13"},{"size":201,"mtime":1698147617831,"results":"18","hashOfConfig":"13"},{"size":308,"mtime":1698147617831,"results":"19","hashOfConfig":"13"},{"size":3242,"mtime":1698147617831,"results":"20","hashOfConfig":"13"},{"size":1806,"mtime":1698147617831,"results":"21","hashOfConfig":"13"},{"size":311,"mtime":1698147617831,"results":"22","hashOfConfig":"13"},{"size":2004,"mtime":1698399374002,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mahsmt",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},"/home/dheerajcl/Code-pulse/Codepulse/src/index.js",[],[],"/home/dheerajcl/Code-pulse/Codepulse/src/reportWebVitals.js",[],[],"/home/dheerajcl/Code-pulse/Codepulse/src/App.js",[],[],"/home/dheerajcl/Code-pulse/Codepulse/src/pages/Home.js",["62"],[],"// Home.js\nimport React, { useState } from 'react';\nimport { v4 as uuidV4 } from 'uuid';\nimport toast from 'react-hot-toast';\nimport { useNavigate } from 'react-router-dom';\nimport ParticleEffect from '../Particleeffect';\n\nconst Home = () => {\n    const navigate = useNavigate();\n\n    const [roomId, setRoomId] = useState('');\n    const [username, setUsername] = useState('');\n\n    const createNewRoom = (e) => {\n        e.preventDefault();\n        const id = uuidV4();\n        setRoomId(id);\n        toast.success('Created a new room');\n    };\n\n    const joinRoom = () => {\n        if (!roomId || !username) {\n            toast.error('ROOM ID & username are required');\n            return;\n        }\n\n        navigate(`/editor/${roomId}`, {\n            state: {\n                username,\n            },\n        });\n    };\n\n    const handleInputEnter = (e) => {\n        if (e.code === 'Enter') {\n            joinRoom();\n        }\n    };\n\n    return (\n        <div className=\"homePageWrapper\">\n            <div className=\"formWrapper\">\n                <img\n                    className=\"homePageLogo\"\n                    src=\"/icon.png\"\n                    alt=\"code-pulse-logo\"\n                />\n                <h4 className=\"mainLabel\">Paste the ROOM ID from the invite</h4>\n                <div className=\"inputGroup\">\n                    <input\n                        type=\"text\"\n                        className=\"inputBox\"\n                        placeholder=\"ROOM ID\"\n                        onChange={(e) => setRoomId(e.target.value)}\n                        value={roomId}\n                        onKeyUp={handleInputEnter}\n                    />\n                    <input\n                        type=\"text\"\n                        className=\"inputBox\"\n                        placeholder=\"USERNAME\"\n                        onChange={(e) => setUsername(e.target.value)}\n                        value={username}\n                        onKeyUp={handleInputEnter}\n                    />\n                    <button className=\"btn joinBtn\" onClick={joinRoom}>\n                        Join\n                    </button>\n                    <span className=\"createInfo\">\n                        If you don't have an invite, create a &nbsp;\n                        <a onClick={createNewRoom} href=\"\" className=\"createNewBtn\">\n                            new room\n                        </a>\n                    </span>\n                </div>\n            </div>\n            <ParticleEffect />\n        </div>\n    );\n};\n\nexport default Home;\n","/home/dheerajcl/Code-pulse/Codepulse/src/pages/EditorPage.js",["63"],[],"// EditorPage.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport ACTIONS from '../Actions';\nimport Client from '../components/Client';\nimport Editor from '../components/Editor';\nimport { initSocket } from '../socket';\nimport { useLocation, useNavigate, Navigate, useParams } from 'react-router-dom';\n\nconst EditorPage = () => {\n  const socketRef = useRef(null);\n  const codeRef = useRef(null);\n  const location = useLocation();\n  const { roomId } = useParams();\n  const reactNavigator = useNavigate();\n  const [clients, setClients] = useState([]);\n  const [editingPermission, setEditingPermission] = useState(true);\n\n  useEffect(() => {\n    const init = async () => {\n      socketRef.current = await initSocket();\n      socketRef.current.on('connect_error', (err) => handleErrors(err));\n      socketRef.current.on('connect_failed', (err) => handleErrors(err));\n\n      function handleErrors(e) {\n        console.log('socket error', e);\n        toast.error('Socket connection failed, try again later.');\n        reactNavigator('/');\n      }\n\n      socketRef.current.emit(ACTIONS.JOIN, {\n        roomId,\n        username: location.state?.username,\n        editingPermission,\n      });\n\n      socketRef.current.on(\n        ACTIONS.JOINED,\n        ({ clients, username, socketId, editingPermission }) => {\n          if (username !== location.state?.username) {\n            toast.success(`${username} joined the room.`);\n            console.log(`${username} joined`);\n          }\n          setClients(clients);\n          setEditingPermission(editingPermission);\n          socketRef.current.emit(ACTIONS.SYNC_CODE, {\n            code: codeRef.current,\n            socketId,\n          });\n        }\n      );\n\n      socketRef.current.on(\n        ACTIONS.DISCONNECTED,\n        ({ socketId, username }) => {\n          toast.success(`${username} left the room.`);\n          setClients((prev) => {\n            return prev.filter(\n              (client) => client.socketId !== socketId\n            );\n          });\n        }\n      );\n    };\n    init();\n    return () => {\n      socketRef.current.disconnect();\n      socketRef.current.off(ACTIONS.JOINED);\n      socketRef.current.off(ACTIONS.DISCONNECTED);\n    };\n  }, []);\n\n  async function copyRoomId() {\n    try {\n      await navigator.clipboard.writeText(roomId);\n      toast.success('Room ID has been copied to your clipboard');\n    } catch (err) {\n      toast.error('Could not copy the Room ID');\n      console.error(err);\n    }\n  }\n\n  function leaveRoom() {\n    reactNavigator('/');\n  }\n\n  if (!location.state) {\n    return <Navigate to=\"/\" />;\n  }\n\n  return (\n    <div className=\"editor-page\">\n      <aside className=\"sidebar\">\n        <div className=\"logo\">\n          <img className=\"logo-image\" src=\"/icon.png\" alt=\"logo\" />\n        </div>\n        <h3>Connected Users</h3>\n        <div className=\"clients-list\">\n          {clients.map((client) => (\n            <Client key={client.socketId} username={client.username} />\n          ))}\n        </div>\n        <button className=\"btn copy-btn\" onClick={copyRoomId}>\n          Copy ROOM ID\n        </button>\n        <button className=\"btn leave-btn\" onClick={leaveRoom}>\n          Leave\n        </button>\n      </aside>\n      <div className=\"editor-wrap\">\n        <Editor\n          socketRef={socketRef}\n          roomId={roomId}\n          onCodeChange={(code) => {\n            codeRef.current = code;\n          }}\n          readOnly={!editingPermission}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default EditorPage;\n","/home/dheerajcl/Code-pulse/Codepulse/src/Actions.js",[],[],"/home/dheerajcl/Code-pulse/Codepulse/src/socket.js",[],[],"/home/dheerajcl/Code-pulse/Codepulse/src/Particleeffect.js",["64","65","66","67","68","69","70","71","72","73"],[],"// ParticleEffect.js\nimport React, { useLayoutEffect, useRef } from 'react';\n\nconst ParticleEffect = () => {\n  const canvasRef = useRef();\n  let canvas;\n  let context;\n  let particles = [];\n  let mouseX, mouseY;\n  let centerX, centerY;\n  let canvasWidth, canvasHeight;\n  let speed = 2;\n  let targetSpeed = 2;\n\n  const randomizeParticle = (p) => {\n    p.x = Math.random() * canvasWidth;\n    p.y = Math.random() * canvasHeight;\n    p.z = Math.random() * 1500 + 500;\n    return p;\n  };\n\n  useLayoutEffect(() => {\n    canvas = canvasRef.current;\n    context = canvas.getContext('2d');\n\n    const resize = () => {\n      canvasWidth = canvas.width = window.innerWidth;\n      canvasHeight = canvas.height = window.innerHeight;\n      centerX = canvasWidth * 0.5;\n      centerY = canvasHeight * 0.5;\n      context.fillStyle = 'rgb(255, 255, 255)';\n    };\n\n    document.addEventListener('resize', resize);\n    resize();\n\n    mouseX = centerX;\n    mouseY = centerY;\n\n    for (let i = 0; i < 500; i++) {\n      particles[i] = randomizeParticle({});\n      particles[i].z -= 500 * Math.random();\n    }\n\n    const loop = () => {\n      context.save();\n      context.fillStyle = 'rgb(0, 0, 0)';\n      context.fillRect(0, 0, canvasWidth, canvasHeight);\n      context.restore();\n\n      speed += (targetSpeed - speed) * 0.01;\n\n      for (let i = 0; i < 500; i++) {\n        const p = particles[i];\n\n        p.pastZ = p.z;\n        p.z -= speed;\n\n        if (p.z <= 0) {\n          randomizeParticle(p);\n          continue;\n        }\n\n        const cx = centerX - (mouseX - centerX) * 1.25;\n        const cy = centerY - (mouseY - centerY) * 1.25;\n\n        const rx = p.x - cx;\n        const ry = p.y - cy;\n\n        const f = 500 / p.z;\n        const x = cx + rx * f;\n        const y = cy + ry * f;\n        const r = 0.5 * f;\n\n        const pf = 500 / p.pastZ;\n        const px = cx + rx * pf;\n        const py = cy + ry * pf;\n        const pr = 0.5 * pf;\n\n        const a = Math.atan2(py - y, px - x);\n        const a1 = a + Math.PI * 0.5;\n        const a2 = a - Math.PI * 0.5;\n\n        context.beginPath();\n        context.moveTo(px + pr * Math.cos(a1), py + pr * Math.sin(a1));\n        context.arc(px, py, pr, a1, a2, true);\n        context.lineTo(x + r * Math.cos(a2), y + r * Math.sin(a2));\n        context.arc(x, y, r, a2, a1, true);\n        context.closePath();\n        context.fill();\n      }\n\n      requestAnimationFrame(loop);\n    };\n\n    const mouseMoveHandler = (e) => {\n      mouseX = e.clientX;\n      mouseY = e.clientY;\n    };\n\n    const mouseDownHandler = () => {\n      targetSpeed = 300;\n    };\n\n    const mouseUpHandler = () => {\n      targetSpeed = 2;\n    };\n\n    document.addEventListener('mousemove', mouseMoveHandler, false);\n    document.addEventListener('mousedown', mouseDownHandler, false);\n    document.addEventListener('mouseup', mouseUpHandler, false);\n\n    loop();\n\n    return () => {\n      window.removeEventListener('resize', resize);\n      document.removeEventListener('mousemove', mouseMoveHandler);\n      document.removeEventListener('mousedown', mouseDownHandler);\n      document.removeEventListener('mouseup', mouseUpHandler);\n    };\n  }, []);\n\n  return <canvas ref={canvasRef} id=\"c\"></canvas>;\n};\n\nexport default ParticleEffect;\n","/home/dheerajcl/Code-pulse/Codepulse/src/components/Editor.js",["74","75","76"],[],"import React, { useEffect, useRef } from 'react';\nimport Codemirror from 'codemirror';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/dracula.css';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/addon/edit/closetag';\nimport 'codemirror/addon/edit/closebrackets';\nimport ACTIONS from '../Actions';\n\nconst Editor = ({ socketRef, roomId, onCodeChange }) => {\n    const editorRef = useRef(null);\n    useEffect(() => {\n        async function init() {\n            editorRef.current = Codemirror.fromTextArea(\n                document.getElementById('realtimeEditor'),\n                {\n                    mode: { name: 'javascript', json: true },\n                    theme: 'dracula',\n                    autoCloseTags: true,\n                    autoCloseBrackets: true,\n                    lineNumbers: true,\n                }\n            );\n\n            editorRef.current.on('change', (instance, changes) => {\n                const { origin } = changes;\n                const code = instance.getValue();\n                onCodeChange(code);\n                if (origin !== 'setValue') {\n                    socketRef.current.emit(ACTIONS.CODE_CHANGE, {\n                        roomId,\n                        code,\n                    });\n                }\n            });\n        }\n        init();\n    }, []);\n\n    useEffect(() => {\n        if (socketRef.current) {\n            socketRef.current.on(ACTIONS.CODE_CHANGE, ({ code }) => {\n                if (code !== null) {\n                    editorRef.current.setValue(code);\n                }\n            });\n        }\n\n        return () => {\n            socketRef.current.off(ACTIONS.CODE_CHANGE);\n        };\n    }, [socketRef.current]);\n\n    return <textarea id=\"realtimeEditor\"></textarea>;\n};\n\nexport default Editor;","/home/dheerajcl/Code-pulse/Codepulse/src/components/Client.js",[],[],"/home/dheerajcl/Code-pulse/Codepulse/src/pages/LandingPage.js",["77"],[],"// LandingPage.js\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom'; // Import Link from react-router-dom\nimport Typed from 'typed.js';\nimport ParticleEffect from '../Particleeffect';\nimport './Landingstyle.css';\n\nconst LandingPage = () => {\n  const introText = \"Step into coding's fast lane with our real-time editor—your ideas, instantly tangible. No more waiting; just code, collaborate, and create with unprecedented speed.\";\n\n  useEffect(() => {\n    // Typed.js typing effect for the subheading\n    const typedSubHeading = new Typed('.sub-heading', {\n      strings: [\"The real-time code editor that unleashes your creativity.\"],\n      typeSpeed: 40,\n      showCursor: false,\n    });\n\n    // Clean up Typed instances on component unmount\n    return () => {\n      typedSubHeading.destroy();\n    };\n  }, []); // Empty dependency array ensures that this effect runs only once after initial render\n\n  return (\n    <div>\n      <section className=\"bg-hero\" id=\"home\">\n        <div className=\"container\">\n          <div className=\"row vh-md-100\">\n            <div className=\"col-md-8 col-sm-10 col-12 mx-auto my-auto text-center\">\n            <h1 className=\"heading-black text-capitalize fadeInLeft\">Code-pulse</h1>\n              <h2 className=\"sub-heading text-capitalize fadeInLeft\"></h2>\n              <p className=\"lead-typed py-3 fadeInLeft\">\n                <span className=\"type-in\">{introText}</span>\n              </p>\n\n              {/* Link to navigate to Home.js */}\n              <Link to=\"/home\" className=\"btn btn-primary d-inline-flex flex-row align-items-center\">\n                Get started now\n                <em className=\"ml-2\" data-feather=\"arrow-right\"></em>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <ParticleEffect />\n\n      {/* Footer Section */}\n      <div className=\"footer\">\n        &copy; 2023 Codepulse - All Rights Reserved\n      </div>\n    </div>\n  );\n};\n\nexport default LandingPage;\n",{"ruleId":"78","severity":1,"message":"79","line":71,"column":25,"nodeType":"80","endLine":71,"endColumn":85},{"ruleId":"81","severity":1,"message":"82","line":71,"column":6,"nodeType":"83","endLine":71,"endColumn":8,"suggestions":"84"},{"ruleId":"81","severity":1,"message":"85","line":23,"column":14,"nodeType":"86","endLine":23,"endColumn":31},{"ruleId":"81","severity":1,"message":"87","line":24,"column":15,"nodeType":"88","endLine":24,"endColumn":38},{"ruleId":"81","severity":1,"message":"89","line":27,"column":21,"nodeType":"90","endLine":27,"endColumn":53},{"ruleId":"81","severity":1,"message":"91","line":28,"column":22,"nodeType":"90","endLine":28,"endColumn":56},{"ruleId":"81","severity":1,"message":"92","line":29,"column":17,"nodeType":"93","endLine":29,"endColumn":34},{"ruleId":"81","severity":1,"message":"94","line":30,"column":17,"nodeType":"93","endLine":30,"endColumn":35},{"ruleId":"81","severity":1,"message":"95","line":37,"column":14,"nodeType":"96","endLine":37,"endColumn":21},{"ruleId":"81","severity":1,"message":"97","line":38,"column":14,"nodeType":"96","endLine":38,"endColumn":21},{"ruleId":"81","severity":1,"message":"98","line":51,"column":16,"nodeType":"93","endLine":51,"endColumn":44},{"ruleId":"81","severity":1,"message":"99","line":102,"column":21,"nodeType":"100","endLine":102,"endColumn":24},{"ruleId":"81","severity":1,"message":"101","line":38,"column":8,"nodeType":"83","endLine":38,"endColumn":10,"suggestions":"102"},{"ruleId":"81","severity":1,"message":"103","line":50,"column":23,"nodeType":"96","endLine":50,"endColumn":30},{"ruleId":"81","severity":1,"message":"104","line":52,"column":8,"nodeType":"83","endLine":52,"endColumn":27,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":32,"column":15,"nodeType":"80","endLine":32,"endColumn":70},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'editingPermission', 'location.state?.username', 'reactNavigator', and 'roomId'. Either include them or remove the dependency array.","ArrayExpression",["108"],"Assignments to the 'canvas' variable from inside React Hook useLayoutEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useLayoutEffect.","MemberExpression","Assignments to the 'context' variable from inside React Hook useLayoutEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useLayoutEffect.","CallExpression","Assignments to the 'canvasWidth' variable from inside React Hook useLayoutEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useLayoutEffect.","AssignmentExpression","Assignments to the 'canvasHeight' variable from inside React Hook useLayoutEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useLayoutEffect.","Assignments to the 'centerX' variable from inside React Hook useLayoutEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useLayoutEffect.","BinaryExpression","Assignments to the 'centerY' variable from inside React Hook useLayoutEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useLayoutEffect.","Assignments to the 'mouseX' variable from inside React Hook useLayoutEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useLayoutEffect.","Identifier","Assignments to the 'mouseY' variable from inside React Hook useLayoutEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useLayoutEffect.","Assignments to the 'speed' variable from inside React Hook useLayoutEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useLayoutEffect.","Assignments to the 'targetSpeed' variable from inside React Hook useLayoutEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useLayoutEffect.","Literal","React Hook useEffect has missing dependencies: 'onCodeChange', 'roomId', and 'socketRef'. Either include them or remove the dependency array. If 'onCodeChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["109"],"The ref value 'socketRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'socketRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has a missing dependency: 'socketRef'. Either include it or remove the dependency array. Mutable values like 'socketRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["110"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},"Update the dependencies array to be: [editingPermission, location.state?.username, reactNavigator, roomId]",{"range":"117","text":"118"},"Update the dependencies array to be: [onCodeChange, roomId, socketRef]",{"range":"119","text":"120"},"Update the dependencies array to be: [socketRef]",{"range":"121","text":"122"},[2260,2262],"[editingPermission, location.state?.username, reactNavigator, roomId]",[1339,1341],"[onCodeChange, roomId, socketRef]",[1703,1722],"[socketRef]"]